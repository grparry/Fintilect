"use strict";define("Wiki/WikiPicker",["require","exports","react","VSS/Core/Observable","VSS/Platform/Feature","VSS/Platform/Layout","VSSUI/Dropdown","VSSUI/Icon","VSSUI/ListBox","VSSUI/Menu","VSSUI/Utilities/DropdownSelection","VSSUI/Utilities/GroupedItemProvider","Wiki/Clients/Wiki/RestClient/Wiki","Wiki/ViewCommon/Constants","Wiki/ViewCommon/Utils/WikiHelper","Wiki/ViewCommon/Utils/WikiPermissionsHelper","Wiki/ViewCommon/WrappedDialogHelper"],(function(i,e,t,o,n,s,r,a,c,k,p,l,h,d,w,u,m){var W,x;W=e[x="Resources"]={},e[x].ProjectWikiText="Project wiki",e[x].CodeWikisText="Code wikis",e[x].CloneWikiText="Clone wiki",e[x].RenameWikiMenuText="Rename wiki",e[x].UnpublishWikiText="Unpublish wiki",e[x].WikiSecurityText="Wiki security",e[x].WikiPickerSearchTextPlaceholder="Filter wikis",e[x].WikiPickerNoWikisText="No wikis available",e[x].WikiPublishWikiActionText="Publish code as wiki",e[x].WikiPublishWikiVersionActionText="Publish new branch",e[x].WikiCreateNewProjectWikiActionText="Create new project wiki",e[x].WikiVersionMenuItemsText="Published branches",e[x].WikiSecurityTitle="Security for Wiki",function(i){e[i]={};const x="published-branches",g=[{groupId:(0).toString(),name:W.ProjectWikiText},{groupId:1..toString(),name:W.CodeWikisText}];class P extends s.VssComponent{constructor(i,e){if(super(i,e),this.loadingItem={id:"loading",type:4,render:(i,e,o,n)=>t.createElement(c.LoadingCell,{key:i,columnIndex:e,tableColumn:o,tableItem:n})},this._onWikiPickerExpand=()=>{if(!this._wikiLoaderPromise){this._loadingWiki.value=!0;const i=this.props.wikiInfo.wiki.projectId;this._wikiLoaderPromise=this.trackPromise((0,h.getWikiClient)(this.context.pageContext).getAllWikis(i)).promise,this._wikiLoaderPromise.then((i=>{this._wikiGroupedItemProvider.pop(),i.forEach((i=>{g.forEach((i=>{this._wikiGroupedItemProvider.pushGroups({name:i.name,id:i.groupId})})),this._wikiGroupedItemProvider.push({id:i.id,text:i.name,groupId:i.type.toString(),iconProps:{iconName:"Dictionary"}})})),this._wikiSelection.select(this._wikiGroupedItemProvider.value.findIndex((i=>i.id===this.props.wikiInfo.wiki.id))),this._loadingWiki.value=!1}))}},this._onWikiSelectionChange=(i,e)=>{if(e.text){const i=e.text;this.context.pageContext.getService("ISettingsService").setEntries({WikiName:i},0,"Project",this.props.wikiInfo.wiki.projectId),C(this.context.pageContext,"WikiSwitched",this.props.wikiInfo.wiki.type),(0,w.navigateToUrl)(this.context.pageContext,this.props.wikiInfo.wiki.projectId,i)}},this._onWikiVersionSelectionChange=(i,e)=>{var t,o;t=this.context.pageContext,o="WikiVersionSwitched",(0,w.publish)(t,o,void 0,{source:"wiki-version-picker"}),(0,w.navigateToUrl)(this.context.pageContext,this.props.wikiInfo.wiki.projectId,this.props.wikiInfo.wiki.name,{wikiVersion:(0,w.getVersionFromBranchName)(e.id)})},this._onRenderSelectedVersion=(i,e)=>t.createElement("div",{className:"text-ellipsis"},t.createElement(a.Icon,{iconName:"OpenSource",className:"selected-wiki-version"}),e[i.value[0].beginIndex].text||""),this._getMenuItems=()=>{const i=[],e=(0,w.isCodeWiki)(this.props.wikiInfo.wiki);return e||(i.push({id:"cloneWiki",text:W.CloneWikiText,iconProps:{iconName:"CloneToDesktop"},onActivate:this._showCloneDialog}),i.push({id:"wikiSecurity",text:W.WikiSecurityText,iconProps:{iconName:"Shield"},onActivate:this._showWikiSecurity,disabled:!1})),i.push({id:"renameWiki",text:W.RenameWikiMenuText,iconProps:{iconName:"Rename"},onActivate:this._showRenameWikiDialog,disabled:!this.props.wikiInfo.wikiPermissions.hasWikiRenamePermission}),e&&i.push({id:"unpublishWiki",text:W.UnpublishWikiText,onActivate:this._showUnpublishWikiDialog,disabled:!this.props.wikiInfo.wikiPermissions.hasWikiContributePermission,iconProps:{iconName:"DictionaryRemove"}}),i},this._showCloneDialog=()=>{I(this.context.pageContext,"CloneWikiButtonClicked",{wikiRepositoryData:this.props.wikiInfo.wikiRepositoryData},"Wiki.CloneWikiDialog",["ms.vss-wiki-web.wiki-clone-dialog"],this.props.wikiInfo.wiki.type)},this._showRenameWikiDialog=()=>{I(this.context.pageContext,"RenameWikiButtonClicked",{wiki:this.props.wikiInfo.wiki},"Wiki.RenameWikiDialog",["ms.vss-wiki-web.wiki-rename-dialog"],this.props.wikiInfo.wiki.type)},this._showPublishWikiPanel=()=>{I(this.context.pageContext,"PublishCodeWikiButtonClicked",{},"Wiki.PublishCodeWikiPanel",["ms.vss-wiki-web.publish-codewiki-panel-content"],this.props.wikiInfo.wiki.type)},this._showUnpublishWikiDialog=()=>{I(this.context.pageContext,"UnpublishWikiButtonClicked",{wiki:this.props.wikiInfo.wiki,repositoryName:this.props.wikiInfo.wikiRepositoryData.repository.name},"Wiki.UnpublishWikiDialog",["ms.vss-wiki-web.wiki-unpublish-dialog"],this.props.wikiInfo.wiki.type)},this._showWikiSecurity=()=>{C(this.context.pageContext,"SecurityDialogPrompted",this.props.wikiInfo.wiki.type);const i=this.props.wikiInfo.wiki.projectId,e=this.props.wikiInfo.wiki.repositoryId;this.setState({showWikiSecurityLoadingSpinner:!0});const t=this.context.pageContext.getService("ILegacyPlatformService");this.trackPromise(t.requireModules(["Admin/Scripts/TFS.Admin.Security"])).promise.then((([t])=>{this.setState({showWikiSecurityLoadingSpinner:!1});const o=new t.SecurityManager.create("2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",{projectGuid:i}),n=(0,u.calculateGitSecuredToken)(i,e);o.showPermissions(n,W.WikiSecurityTitle,W.WikiSecurityTitle,void 0,"900")}))},this._getWikiPickerActions=()=>{const i=[];return this.props.showCreateNewProjectWikiAction&&i.push({className:"wiki-picker-action",text:W.WikiCreateNewProjectWikiActionText,iconProps:{iconName:"Add"},onClick:this._onCreateWikiClick}),this.props.showPublishCodeWikiAction&&i.push({className:"wiki-picker-action",text:W.WikiPublishWikiActionText,disabled:!(0,n.isFeatureEnabled)(this.context.pageContext,d.RepoServiceContributionId),iconProps:{iconName:"PublishContent"},onClick:this._showPublishWikiPanel}),i},this._getWikiVersionPickerActions=()=>{const i=[];return this.props.wikiInfo.wikiPermissions.hasWikiContributePermission&&i.push({className:"wiki-picker-action",text:W.WikiPublishWikiVersionActionText,iconProps:{iconName:"PublishContent"},onClick:()=>(0,w.navigateToUrl)(this.context.pageContext,this.props.wikiInfo.wiki.projectId,this.props.wikiInfo.wiki.name,{[d.UrlConstants.ActionParam]:"update"})}),i},this._onCreateWikiClick=()=>{C(this.context.pageContext,"CreateProjectWikiButtonClicked",this.props.wikiInfo.wiki.type),this.trackPromise((0,h.getWikiClient)(this.context.pageContext).createWiki({type:0,projectId:this.props.wikiInfo.wiki.projectId})).promise.then((i=>{(0,w.navigateToUrl)(this.context.pageContext,i.projectId,i.name,{[d.UrlConstants.WikiVersionParam]:(0,w.getVersionFromBranchName)(i.versions[0].version)})}))},this.state={},this._loadingWiki=new o.ObservableValue(!1),this._wikiSelection=new p.DropdownSelection,this._wikiGroupedItemProvider=new l.GroupedItemProvider([],[],!0),this._wikiGroupedItemProvider.push(this.loadingItem),(0,w.isCodeWiki)(this.props.wikiInfo.wiki)){this._versionSelection=new p.DropdownSelection;const i=this.props.wikiInfo.wiki.versions.map((i=>({id:i.version,text:i.version,iconProps:{iconName:"OpenSource"},groupId:x}))),e=[{id:x,name:W.WikiVersionMenuItemsText}];this._versionGroupedItemProvider=new l.GroupedItemProvider(i,e,!0);const t=this._versionGroupedItemProvider.value.findIndex((i=>i.text===this.props.wikiInfo.wikiVersion.version));this._versionSelection.select(t)}}render(){return t.createElement("div",{className:"wiki-picker-container flex-column"},t.createElement("div",{className:"flex-row wiki-picker"},t.createElement("div",{className:"h-scroll-hidden flex-column"},t.createElement(r.Dropdown,{className:"wiki-picker-button",selection:this._wikiSelection,items:this._wikiGroupedItemProvider,loading:this._loadingWiki,onExpand:this._onWikiPickerExpand,actions:this._getWikiPickerActions(),width:256,onSelect:this._onWikiSelectionChange,placeholder:this.props.wikiInfo.wiki.name,renderExpandable:i=>t.createElement(r.DropdownExpandableButton,Object.assign({},i)),filterPlaceholderText:W.WikiPickerSearchTextPlaceholder,renderCallout:i=>t.createElement(r.DropdownCallout,Object.assign({},i,{dropdownOrigin:{horizontal:"start",vertical:"start"},anchorOrigin:{horizontal:"start",vertical:"end"}}))})),t.createElement(k.MoreButton,{contextualMenuProps:{menuProps:{id:"wikipicker-menu",items:this._getMenuItems()}}})),(0,w.isCodeWiki)(this.props.wikiInfo.wiki)&&t.createElement(t.Fragment,null,t.createElement("div",{className:"flex-column",style:{margin:"8px 0 0 0"}},t.createElement(r.Dropdown,{className:"wiki-version-picker-button wiki-picker-button",selection:this._versionSelection,items:this._versionGroupedItemProvider,actions:this._getWikiVersionPickerActions(),onSelect:this._onWikiVersionSelectionChange,renderExpandable:i=>t.createElement(r.DropdownExpandableButton,Object.assign({},i,{renderSelectedItems:this._onRenderSelectedVersion})),renderCallout:i=>t.createElement(r.DropdownCallout,Object.assign({},i,{dropdownOrigin:{horizontal:"start",vertical:"start"},anchorOrigin:{horizontal:"start",vertical:"end"}}))}))),this.state.showWikiSecurityLoadingSpinner&&t.createElement(m.LoadingSpinner,null))}}function I(i,e,t,o,n,s){C(i,e,s),(0,m.showWrappedDialog)(i,t,o,n)}function C(i,e,t){(0,w.publish)(i,e,t,{source:"wiki-picker"})}e[i].WikiPicker=P,s.VssComponent.register("wiki-picker",P)}("WikiPicker")}),["Resources","WikiPicker"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-wiki-web.wiki-picker-content"}}));