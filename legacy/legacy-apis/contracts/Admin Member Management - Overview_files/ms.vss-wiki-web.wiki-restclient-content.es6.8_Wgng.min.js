"use strict";define("Wiki/Clients/Wiki",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Platform/Util/Serialization"],(function(e,i,t,r,s){!function(e){i[e]={};class a extends r.RestClientBase{constructor(e){super(e)}async createAttachment(e,i,t,r,a){const n={name:r,versionDescriptor:a};return this.beginRequest({apiVersion:"5.2-preview.1",method:"PUT",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/attachments/{name}",routeValues:{project:i,wikiIdentifier:t},customHeaders:{"Content-Type":"application/octet-stream"},queryParams:n,body:e,isRawData:!0,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{attachment:i,eTag:t?t.split(","):[]}}))}async createCommentAttachment(e,i,t,r){return this.beginRequest({apiVersion:"5.2-preview.1",method:"POST",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/attachments/{attachmentId}",routeValues:{project:i,wikiIdentifier:t,pageId:r},customHeaders:{"Content-Type":"application/octet-stream"},body:e,isRawData:!0})}async getAttachmentContent(e,i,t,r){return this.beginRequest({apiVersion:"5.2-preview.1",httpResponseType:"application/octet-stream",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/attachments/{attachmentId}",routeValues:{project:e,wikiIdentifier:i,pageId:t,attachmentId:r}})}async addCommentReaction(e,i,t,r,s){return this.beginRequest({apiVersion:"5.2-preview.1",method:"PUT",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{commentId}/reactions/{type}",routeValues:{project:e,wikiIdentifier:i,pageId:t,commentId:r,type:s}})}async deleteCommentReaction(e,i,t,r,s){return this.beginRequest({apiVersion:"5.2-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{commentId}/reactions/{type}",routeValues:{project:e,wikiIdentifier:i,pageId:t,commentId:r,type:s}})}async getEngagedUsers(e,i,t,r,s,a,n){const o={$top:a,$skip:n};return this.beginRequest({apiVersion:"5.2-preview.1",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{commentId}/reactions/{type}/users",routeValues:{project:e,wikiIdentifier:i,pageId:t,commentId:r,type:s},queryParams:o})}async addComment(e,i,t,r){return this.beginRequest({apiVersion:"5.2-preview.1",method:"POST",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{id}",routeValues:{project:i,wikiIdentifier:t,pageId:r},body:e})}async deleteComment(e,i,t,r){return this.beginRequest({apiVersion:"5.2-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{id}",routeValues:{project:e,wikiIdentifier:i,pageId:t,id:r}})}async getComment(e,i,t,r,s,a){const n={excludeDeleted:s,$expand:a};return this.beginRequest({apiVersion:"5.2-preview.1",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{id}",routeValues:{project:e,wikiIdentifier:i,pageId:t,id:r},queryParams:n})}async listComments(e,i,t,r,s,a,n,o,p){const c={$top:r,continuationToken:s,excludeDeleted:a,$expand:n,order:o,parentId:p};return this.beginRequest({apiVersion:"5.2-preview.1",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{id}",routeValues:{project:e,wikiIdentifier:i,pageId:t},queryParams:c})}async updateComment(e,i,t,r,s){return this.beginRequest({apiVersion:"5.2-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/comments/{id}",routeValues:{project:i,wikiIdentifier:t,pageId:r,id:s},body:e})}async createPageMove(e,i,t,r,a){const n={comment:r,versionDescriptor:a};return this.beginRequest({apiVersion:"5.2-preview.1",method:"POST",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pageMoves",routeValues:{project:i,wikiIdentifier:t},queryParams:n,body:e,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{pageMove:i,eTag:t?t.split(","):[]}}))}async createOrUpdatePage(e,i,t,r,a,n,o){const p={path:r,comment:n,versionDescriptor:o};return this.beginRequest({apiVersion:"5.2-preview.1",method:"PUT",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{*path}",routeValues:{project:i,wikiIdentifier:t},customHeaders:{"If-Match":a},queryParams:p,body:e,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{page:i,eTag:t?t.split(","):[]}}))}async deletePage(e,i,t,r,a){const n={path:t,comment:r,versionDescriptor:a};return this.beginRequest({apiVersion:"5.2-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{*path}",routeValues:{project:e,wikiIdentifier:i},queryParams:n,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{page:i,eTag:t?t.split(","):[]}}))}async getPage(e,i,t,r,a,n){const o={path:t,recursionLevel:r,versionDescriptor:a,includeContent:n};return this.beginRequest({apiVersion:"5.2-preview.1",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{*path}",routeValues:{project:e,wikiIdentifier:i},queryParams:o,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{page:i,eTag:t?t.split(","):[]}}))}async getPageText(e,i,t,r,s,a){const n={path:t,recursionLevel:r,versionDescriptor:s,includeContent:a};return this.beginRequest({apiVersion:"5.2-preview.1",httpResponseType:"text/plain",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{*path}",routeValues:{project:e,wikiIdentifier:i},queryParams:n})}async getPageZip(e,i,t,r,s,a){const n={path:t,recursionLevel:r,versionDescriptor:s,includeContent:a};return this.beginRequest({apiVersion:"5.2-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{*path}",routeValues:{project:e,wikiIdentifier:i},queryParams:n})}async deletePageById(e,i,t,r){const a={comment:r};return this.beginRequest({apiVersion:"5.2-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",routeValues:{project:e,wikiIdentifier:i,id:t},queryParams:a,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{page:i,eTag:t?t.split(","):[]}}))}async getPageById(e,i,t,r,a){const n={recursionLevel:r,includeContent:a};return this.beginRequest({apiVersion:"5.2-preview.1",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",routeValues:{project:e,wikiIdentifier:i,id:t},queryParams:n,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{page:i,eTag:t?t.split(","):[]}}))}async getPageByIdText(e,i,t,r,s){const a={recursionLevel:r,includeContent:s};return this.beginRequest({apiVersion:"5.2-preview.1",httpResponseType:"text/plain",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",routeValues:{project:e,wikiIdentifier:i,id:t},queryParams:a})}async getPageByIdZip(e,i,t,r,s){const a={recursionLevel:r,includeContent:s};return this.beginRequest({apiVersion:"5.2-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",routeValues:{project:e,wikiIdentifier:i,id:t},queryParams:a})}async updatePageById(e,i,t,r,a,n){const o={comment:n};return this.beginRequest({apiVersion:"5.2-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",routeValues:{project:i,wikiIdentifier:t,id:r},customHeaders:{"If-Match":a},queryParams:o,body:e,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject),t=e.headers.get("ETag");return{page:i,eTag:t?t.split(","):[]}}))}async getPagesBatch(e,i,t,r){const a={versionDescriptor:r};return this.beginRequest({apiVersion:"5.2-preview.1",method:"POST",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pagesBatch",routeValues:{project:i,wikiIdentifier:t},queryParams:a,body:e,returnRawResponse:!0}).then((async e=>{const i=await e.text().then(s.deserializeVssJsonObject);return i.continuationToken=e.headers.get("x-ms-continuationtoken"),i}))}async getPageData(e,i,t,r){const s={pageViewsForDays:r};return this.beginRequest({apiVersion:"5.2-preview.1",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/stats",routeValues:{project:e,wikiIdentifier:i,pageId:t},queryParams:s})}async createOrUpdatePageViewStats(e,i,t,r,s){const a={wikiVersion:t,path:r,oldPath:s};return this.beginRequest({apiVersion:"5.2-preview.1",method:"POST",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}/pageViewStats/{*path}",routeValues:{project:e,wikiIdentifier:i},queryParams:a})}async createWiki(e,i){return this.beginRequest({apiVersion:"5.2-preview.2",method:"POST",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}",routeValues:{project:i},body:e})}async deleteWiki(e,i){return this.beginRequest({apiVersion:"5.2-preview.2",method:"DELETE",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}",routeValues:{project:i,wikiIdentifier:e}})}async getAllWikis(e){return this.beginRequest({apiVersion:"5.2-preview.2",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}",routeValues:{project:e}})}async getWiki(e,i){return this.beginRequest({apiVersion:"5.2-preview.2",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}",routeValues:{project:i,wikiIdentifier:e}})}async updateWiki(e,i,t){return this.beginRequest({apiVersion:"5.2-preview.2",method:"PATCH",routeTemplate:"{project}/_apis/wiki/wikis/{wikiIdentifier}",routeValues:{project:t,wikiIdentifier:i},body:e})}}i[e].WikiClientName="IWikiRestClient",i[e].getWikiClient=function(t,r){return t.getRestClient(i[e].WikiClientName,r)},t.RestClients.add(i[e].WikiClientName,{factory:a,options:{resourceAreaId:"bf7d82a0-8aa5-4613-94ef-6172a5ea01f3",serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}("RestClientWiki")}),["RestClient/Wiki"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-wiki-web.wiki-restclient-content"}}));