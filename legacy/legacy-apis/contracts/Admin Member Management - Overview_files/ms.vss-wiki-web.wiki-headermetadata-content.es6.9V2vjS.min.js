"use strict";define("Wiki/HeaderMetaData",["require","exports","react","VSS/Features/Identities/IdentityDetailsProvider","VSSUI/TooltipEx","VSSUI/VssPersona","VSS/Core/Util/String","VSS/Platform/Layout","VSSUI/Ago","Wiki/ViewCommon/Utils/PathHelper","Wiki/ViewCommon/Utils/WikiHelper","Wiki/ViewCommon/WrappedDialogHelper","VSS/Platform/Util/Linking","Wiki/Clients/VC/RestClient/Git","Wiki/Clients/Wit/RestClient/WorkItemTracking","VSS/Reflux/Action","VSS/Reflux/Store","VSS/Platform/Context","Wiki/ViewCommon/ActionListener"],(function(t,e,a,i,s,o,r,n,c,d,h,m,l,k,g,p,u,C,S){var D,w,I,W,_,f;D=e[f="Resources"]={},e[f].WorkItemFormat="{0} work item",e[f].WorkItemsFormat="{0} work items",function(t){w=e[t]={};e[t].EditorComponent=t=>{const e={identity:t.identity,isTeamAdmin:!1},r=new i.IdentityDetailsProvider(t.pageContext,e);return a.createElement("div",{className:"flex-row flex-center"},a.createElement(o.VssPersona,{className:"cursor-pointer",size:"extra-small",identityDetailsProvider:r,isTabStop:!0}),a.createElement(s.Tooltip,{overflowOnly:!0,text:t.identity.displayName,tooltipOrigin:{horizontal:"center",vertical:"start"},anchorOrigin:{horizontal:"center",vertical:"end"}},a.createElement("div",{className:"wiki-last-edited-by-name flex-grow text-ellipsis"},t.identity.displayName)))}}("EditorComponent"),function(t){e[t]={};class i extends n.VssComponent{constructor(){super(...arguments),this._handleKeyDown=t=>{13!==t.keyCode&&32!==t.keyCode||this._linkWitCountClicked()},this._linkWitCountClicked=()=>{(0,h.publish)(this.context.pageContext,"LinkWitCountClicked");const{wiki:t,page:e,onUpdateLinkWitClick:a,hasWikiContributePermission:i}=this.props,s=(0,d.getFileName)(e.path);(0,m.showWrappedDialog)(this.context.pageContext,{title:s,wikiId:t.id,wikiPagePath:e.path,wikiType:(0,h.getWikiTypeString)(t.type),onUpdateButtonClick:a,hasWikiContributePermission:i},"Wiki.LinkWitPanel",["ms.vss-wiki-web.wiki-linkwit-content"])}}render(){const{pushDate:t,pusher:e,workItemsCount:i}=this.props.headerMetaDataState,s=(0,r.format)(i>1?D.WorkItemsFormat:D.WorkItemFormat,i),o=navigator.language.toLocaleLowerCase();return a.createElement("div",{className:"wiki-page-metadata flex-row flex-center"},e&&a.createElement(w.EditorComponent,{identity:e,pageContext:this.context.pageContext}),t&&a.createElement(c.Ago,{date:t,locale:o,className:"last-updated-date"}),i>0&&a.createElement("div",{className:"work-items-linked cursor-pointer",onClick:this._linkWitCountClicked,onKeyDown:this._handleKeyDown,role:"button",tabIndex:0},s))}}e[t].HeaderMetaDataComponent=i,n.VssComponent.register("Wiki.OverviewMetaDataHeader",i)}("HeaderMetaDataComponent"),function(t){I=e[t]={};e[t].HeaderMetaDataSource=class{constructor(t){this._pageContext=t}getCommitsData(t,e,a,i){const s={includeUserImageUrl:!1,itemVersion:t,itemPath:e,includePushData:!0};return(0,k.getGitClient)(this._pageContext).getCommitsBatch(s,i,a,void 0,1)}getLinkedWorkItems(t,e,a){const i="/"===e.charAt(0)?e.substring(1):e,s=(0,r.format)("{0}/{1}/{2}",t,a,i),o=(0,l.encodeUri)({tool:"Wiki",type:"WikiPage",id:s});return this._getWorkItemIdsForArtifactUri(o,t)}_getWorkItemIdsForArtifactUri(t,e){const a={artifactUris:[t]};return(0,g.getWorkItemTrackingClient)(this._pageContext).queryWorkItemsForArtifactUris(a,e).then((e=>(e.artifactUrisQueryResult[t]||[]).map((t=>t.id))))}}}("HeaderMetaDataSource"),function(t){W=e[t]={};e[t].HeaderMetaDataActions=class{constructor(){this.commitsDataFetched=new p.Action,this.linkedWitDataFetched=new p.Action,this.headerMetadataFetchingStarted=new p.Action,this.clearPageMetadata=new p.Action}},e[t].registerActionsWithStores=function(t,e,a){t.addListener(e.commitsDataFetched,a.onCommitsDataFetched),t.addListener(e.linkedWitDataFetched,a.onLinkedWorkItemsFetched),t.addListener(e.headerMetadataFetchingStarted,a.onHeaderMetadataFetchStart),t.addListener(e.clearPageMetadata,a.resetState)};class a extends u.Store{constructor(){super("PageMetaDataStore"),this.resetState=()=>{this._state=this._getInitialState(),this.emitChanged()},this.onHeaderMetadataFetchStart=t=>{this._state=this._getInitialState(),this._state.pagePath=t.pagePath,this._state.gitItemPath=t.gitItemPath,this.emitChanged()},this.onCommitsDataFetched=t=>{if(t&&t.length>0){const e=t[0].push;this._state.pusher=e.pushedBy,this._state.pushDate=e.date,this.emitChanged()}},this.onLinkedWorkItemsFetched=t=>{t&&(this._state.workItemsCount=t.length,this.emitChanged())},this.onLinkedWorkItemsUpdated=t=>{t!==this._state.workItemsCount&&(this._state.workItemsCount=t,this.emitChanged())},this._getInitialState=()=>({workItemsCount:0}),this._state=this._getInitialState()}getState(){return this._state}}e[t].HeaderMetaDataStore=a}("HeaderMetaDataStore"),function(t){_=e[t]={};e[t].HeaderMetaDataActionCreator=class{constructor(t,e,a,i){this._actions=t,this._store=e,this.fetchPageMetaData=(t,e,a,i,s)=>{this._actions.headerMetadataFetchingStarted.invoke({gitItemPath:a,pagePath:i}),this.fetchLastCommitData(t,e,a),this.fetchLinkedWorkItems(i,s)},this.fetchLastCommitData=(t,e,a)=>{this._projectId&&this._source.getCommitsData(e,a,this._projectId,t).then((t=>{this._actions.commitsDataFetched.invoke(t)}))},this.fetchLinkedWorkItems=(t,e)=>{this._projectId&&this._source.getLinkedWorkItems(this._projectId,t,e).then((e=>{this._store.getState().pagePath===t&&this._actions.linkedWitDataFetched.invoke(e)}))},this.clearPageMetadata=()=>{this._actions.clearPageMetadata.invoke()};const s=a.getService("ITfsPageService").getData();this._projectId=s&&s.project&&s.project.id,this._source=i||new I.HeaderMetaDataSource(a)}}}("HeaderMetaDataActionCreator"),function(t){e[t]={};class a extends C.VssService{setupFlux(){const t=new S.ActionListener,e=new W.HeaderMetaDataActions,a=new W.HeaderMetaDataStore;(0,W.registerActionsWithStores)(t,e,a);return{actionCreator:new _.HeaderMetaDataActionCreator(e,a,this.pageContext),store:a,removeActionListeners:()=>t.removeListeners()}}}e[t].HeaderMetaDataService=a,C.Services.add("wiki-headermetadata-service",{serviceFactory:a})}("HeaderMetaDataService")}),["Resources","EditorComponent","HeaderMetaDataComponent","HeaderMetaDataSource","HeaderMetaDataStore","HeaderMetaDataActionCreator","HeaderMetaDataService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-wiki-web.wiki-headermetadata-content"}}));