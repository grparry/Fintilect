@model Omega.Presentation.Mvc.Models.AppConfig.GetConfigSettingModel


@if (Model.ConfigChanged)
{
    <div class="alert alert-info">
        Setting updated at @DateTime.UtcNow
    </div>
}

<div class="form-horizontal">
    <div class="form-group">
        <label class="col-sm-3 control-label">Name</label>
        <div class="col-sm-9 form-control-static">
            @Model.Config.Name
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Application</label>
        <div class="col-sm-9 form-control-static">
            @Model.Config.Application
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Value</label>
        <div class="col-sm-9">
            <textarea type="text" id="configValueInput" class="form-control" placeholder="insert value here...">@Model.Config.Value</textarea>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-3">Value Is Null</label>
        <div class="col-sm-8">
            <input type="checkbox" class="form-control" Id="ValueIsNull" @Html.Raw(Model.Config.Value == null && Model.Config != null ? "checked='checked'" : string.Empty) />
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-7">
            <button class="btn btn-primary" type="button" onclick="AppConfigManager.SaveConfigValue(this);"
                    resource-name="@Model.Config.Name" resource-application="@Model.Config.Application">
                Save
            </button>
        </div>
    </div>
</div>

<script>
    $(function () {
        AutoSizeTextAreas.Set();
    });
</script>