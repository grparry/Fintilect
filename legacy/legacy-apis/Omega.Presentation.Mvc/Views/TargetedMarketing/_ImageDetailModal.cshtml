@using System.Web.Mvc.Html
@using Omega.Presentation.Mvc.Models.TargetedMarketing

@model Image


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

    <h4 class="modal-title">
        Manage Promotional Image - @(ViewBag.Mode == "update" ? Model.ImageName : "Create New Promotional Image")
    </h4>
</div>

<div class="modal-body">
    <div id="ValidatorDiv" class="alert alert-danger" style="display: none;">
        There were errors in your form entries:
    </div>

    <div id="successDiv" class="alert alert-success" style="display: none;">
        <div style="float: right; margin-top: -8px;"><input type="button" class="btn btn-default" id="CancelModalButton" value="Continue" data-dismiss="modal" /></div>
        <div style="width: 50%;">Your Image data has been saved.</div>
    </div>

    <div id="failureDiv" class="alert alert-danger" style="display: none;">
        We were unable to save your data, please try again later.
    </div>

    <div id="deleteDiv" class="alert alert-warning" style="display: none;">
        <div style="float: right; margin-top: -8px;"><input type="button" class="btn btn-default" id="CancelDeleteButton" value="Continue" data-dismiss="modal" /></div>
        <div style="width: 50%;">Your Image has been deleted.</div>

    </div>

    <div id="divProcessing" class="text-center" style="display:none; margin-bottom: 14px;">
        <img src='@Url.Content("~/Images/ajax_loader.gif")' alt="loading" /> &nbsp;Processing Request...
    </div>

    @using (Ajax.BeginForm((ViewBag.Mode == "update" ? "UpdateImage" : "CreateImage"), "TargetedMarketing", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", id = "ImageUploadForm" }))
    {

        <div class="form-horizontal" id="imageFormSection">

            <div class="form-group">
                <label class="col-md-3 control-label">Image Name</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.ImageName, new { @class = "form-control" })
                    @Html.HiddenFor(x => x.ImageId)
                    <input type="hidden" id="TmUploadFileTypesHidden" value="jpg,jpeg,png,gif" />
                </div><br /><br />
                <label class="col-md-3 control-label">Image Description</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.ImageDescription, new { @class = "form-control" })
                </div><br /><br />
                <label class="col-md-3 control-label">Image AltText</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.ImageAltText, new { @class = "form-control" })
                </div><br /><br />


                @if (ViewBag.Mode == "update")
                {
                        string srcString = "data:" + Model.MimeType + ";base64," + Model.FileContentBase64;

                        <label class="col-md-3 control-label">Current File Name</label>
                        <div class="col-md-8" style="position:relative; top: 6px;">
                            @Model.FileName
                        </div><br /><br />

                        <label class="col-md-3 control-label">Current Image</label>
                        <div class="col-md-8" style="position:relative; top: 6px; margin-bottom:34px;">
                            <img id="currentImage" src="@srcString" style="max-width: 240px;" />
                        </div><br /><br />
                }


                <label class="col-md-3 control-label">@(ViewBag.Mode == "update" ? "Or, Upload a New Image" : "Upload an Image")</label>
                <div class="col-md-8" style="margin-bottom:14px;">
                    <div class="sub-div div-2">
                        <label id="CustomFileUploadLabel" for="file-1" class="custom-file-upload">Choose File</label><span id="FileUploadFilenameSpan"></span>
                        <input id="file-1" type="file" name="file" class="file-upload" /><br />
                        <span class="small text-muted">(4MB max file size - Only .png, .jpg or .gif file types allowed)</span>
                    </div>
                </div><br /><br /> 

                <label class="col-md-3 control-label">Image On Click Action</label>
                <div class="col-md-8">
                    @Html.TextBoxFor(x => x.OnClickAction, new { @class = "form-control" }) &nbsp;<span class="small">(Url of where to go when clicked)</span>
                </div><br /><br />
            </div>
 
        </div><!-- end form-horizontal -->

      
        <hr />

        <div class="text-center space-below-lg">

        </div>


        <div class="row list-row-buttons">
            <div class="col-md-6 text-left">
                <input type="button" class="btn btn-default" id="btnCancel" value="Cancel" data-dismiss="modal" />
            </div>

            <div class="col-md-6 text-right">

                @if (ViewBag.Mode == "update")
                {
                    @Ajax.ActionLink("Delete Image", "DeleteImage", "TargetedMarketing", new { id = Model.ImageId }, new AjaxOptions
               {
                   HttpMethod = "GET",
                   OnBegin = "OmegaTargetedMarketingManagePromotionsModal.logAjaxBegin",
                   OnComplete = "OmegaTargetedMarketingManagePromotionsModal.showComplete",
                   OnFailure = "OmegaTargetedMarketingManagePromotionsModal.showFailure",
                   Confirm = "Are you really sure you want to delete this image: " + Model.ImageName + " ?"
               }, new { @class = "btn btn-danger", @id = "DeleteButton" })
                }
                &nbsp;
                &nbsp;<input type="submit" value="Save Changes" class="btn btn-primary" id="SubmitButton" />
            </div>
        </div>

    }
</div><!-- End modal-body -->

<script>
    $(document).ready(function () {
        $('#account-group-detail-modal').on('hidden.bs.modal', function () {
            setTimeout(function () { self.location.href = "ManageImages" }, 100);
        });

        if ($("#List").is(":checked"))
        {
            $("#AccountListDiv").show();
        }

        $("#SubmitButton").prop("disabled", false);
        $("#DeleteButton").prop("disabled", false);

        // Check the file while the user is choosing the upload file before form submit:
        $(".file-upload").bind('change', function () {
            // Check the file size:
            if (this.files[0].size >= 4194304) {   // 4MB -> 4 * 1024 * 1024
                alert('File is to large for uploading.\n\nThis file size is: ' + this.files[0].size / 1024 / 1024 + " MB.");
                this.value = "";
                return;
            }

            // Check the file extention:
            if ($("#TmUploadFileTypesHidden").val().length > 0) {
                if (this.files[0] != undefined) {
                    var fileExt = this.files[0].name.split('.').pop();

                    if ($("#TmUploadFileTypesHidden").val().indexOf(fileExt) == -1) {
                        this.value = "";
                        alert('File is not the right type.\n\nOnly files of this type are allowed: \n\n' + $("#TmUploadFileTypesHidden").val() + ".");
                        return;
                    }
                }
            }

            // set the text next to the file upload:
            if (this.files[0]) {
                $("#FileUploadFilenameSpan").text(this.files[0].name);
            }
        });

        // Submit the form via AJAX:
        $('form').submit(function (e) {
            var ImageFormValid;
            $("#ValidatorDiv").empty();
            $("#ValidatorDiv").html("There were errors in your form entries:");
            $("#ValidatorDiv").slideUp();

            // Client side validation
            // Name:
            if ($("#ImageName").val() === "") {
                document.getElementById("ImageName").style.outline = "1px solid red";
                $("#ValidatorDiv").show("normal");
                $("#ValidatorDiv").append("<br>&bull; Please enter a name.");
                ImageFormValid = false;
            } else {
                document.getElementById("ImageName").style.outline = "none";
            }

            // Description:
            if ($("#ImageDescription").val() === "") {
                document.getElementById("ImageDescription").style.outline = "1px solid red";
                $("#ValidatorDiv").show("normal");
                $("#ValidatorDiv").append("<br>&bull; Please enter a description.");
                ImageFormValid = false;
            } else {
                document.getElementById("ImageDescription").style.outline = "none";
            }

            // ImageAltText:
            if ($("#ImageAltText").val() === "") {
                document.getElementById("ImageAltText").style.outline = "1px solid red";
                $("#ValidatorDiv").show("normal");
                $("#ValidatorDiv").append("<br>&bull; Please enter alt text for the image (text to be read by screen readers).");
                ImageFormValid = false;
            } else {
                document.getElementById("ImageAltText").style.outline = "none";
            }

            // Check to see if file selection is empty on CREATE:
            if ("@ViewBag.Mode" === "create") {
                if ($("#file-1")[0].files[0] === undefined || $("#file-1")[0].files[0] === null) {
                    $("#file-1").val("");
                    document.getElementById("CustomFileUploadLabel").style.outline = "1px solid red";
                    $("#ValidatorDiv").append("<br>&bull; Please select an image to upload by clicking the 'Choose File' button.");
                    ImageFormValid = false;
                } else {
                    document.getElementById("CustomFileUploadLabel").style.outline = "none";
                }
            }

            // Check size of file selection (technically, we should never get here because of the binding check above):
            if ($("#file-1")[0].files[0] != undefined && $("#file-1")[0].files[0].size >= 4194304) {     // 4MB -> 4 * 1024 * 1024
                $("#file-1").val("");
                ImageFormValid = false;
            }

            // Check type of file selection (.jpg, .png, .gif) (technically, we should never get here because of the binding check above):
            if ($("#file-1")[0].files[0] != undefined) {
                var fileExt = $("#file-1")[0].files[0].name.split('.').pop();

                if ($("#TmUploadFileTypesHidden").val().indexOf(fileExt) == -1) {
                    $("#file-1").val("");
                    ImageFormValid = false;
                }
            }
           

            // OnClickAction:
            if ($("#OnClickAction").val() === "") {
                document.getElementById("OnClickAction").style.outline = "1px solid red";
                $("#ValidatorDiv").show("normal");
                $("#ValidatorDiv").append("<br>&bull; Please enter the click action for the image (The href that you want the link to take the user to when the image is clicked).");
                ImageFormValid = false;
            } else {
                document.getElementById("OnClickAction").style.outline = "none";
            }

            // if anything above fails, return false and halt form submit:
            if (ImageFormValid === false) {
                $("#ValidatorDiv").slideDown();
                return false;
            }

            if ($(this).valid()) {
                var processingSpinnerDelay = setTimeout(function () { $('#divProcessing').show("normal"); }, 500); // using setTimeout because jQuery delay only works on animate
                $("#SubmitButton").prop("disabled", true);
                $("#DeleteButton").prop("disabled", true);
                document.getElementById("ImageName").style.outline = "none";
                document.getElementById("ImageDescription").style.outline = "none";
                document.getElementById("ImageAltText").style.outline = "none";
                document.getElementById("CustomFileUploadLabel").style.outline = "none";
                $("#ValidatorDiv").slideUp();

                var ImageUploadForm = e.currentTarget;
                if ($(ImageUploadForm).attr("enctype") === "multipart/form-data") {
                    console.info("entering the submit process...");

                    e.preventDefault();
                    e.stopImmediatePropagation();

                    var xhr = new XMLHttpRequest();
                    xhr.open(ImageUploadForm.method, ImageUploadForm.action);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200 && xhr.response.toLowerCase() === "success") {         // success
                            clearTimeout(processingSpinnerDelay);
                            $('#successDiv').slideDown();
                            $('#failureDiv').slideUp();
                            $('#divProcessing').hide();
                        } else if (xhr.readyState == 4 && xhr.response.toLowerCase() !== "success") {
                            clearTimeout(processingSpinnerDelay);
                            $('#successDiv').slideUp();
                            $('#failureDiv').slideDown();
                            $('#divProcessing').slideUp();
                        }
                    };
                    xhr.send(new FormData(ImageUploadForm));
                }

            }   // end is valid
                return false;
        });

        // reload the base page after notication continue click
        $("#CancelDeleteButton, #CancelModalButton").click(function () {
            setTimeout(function () { self.location.href = "ManageImages" }, 1000);
        });

        // Toggle account numbers text box on radio toggle
        $("#List").change(function() {
            if ($("#List").is(":checked")) {
                $("#AccountListDiv").show("normal");
            } else {
                $("#AccountListDiv").hide("fast");
            }
        });

        $("#All").change(function () {
            if ($("#All").is(":checked")) {
                $("#AccountListDiv").hide("fast");
            } else {
                $("#AccountListDiv").show("normal");
            }
        });

    }); // end document ready


    var OmegaTargetedMarketingManagePromotionsModal = OmegaTargetedMarketingManagePromotionsModal || {};

    OmegaTargetedMarketingManagePromotionsModal = (function () {
        // local vars:
        var _inDelay = false;

        // Ajax starting, getting a record detail
        var _logAjaxBegin = function () {
            console.log("We are logging this click from ajax. - Action Begun from OmegaTargetedMarketingManagePromotionsModal");
            _inDelay = setTimeout(_showSpinner, 1000); // using setTimeout because jQuery delay only works on animate
            $("#failureDiv").hide();
            $("#SubmitButton").prop("disabled", true);
            $("#DeleteButton").prop("disabled", true);
        }

        // show the spinner in a div to let the user know that the record is loading
        var _showSpinner = function () {
            $('#divProcessing').show("normal");
        }

        // Ajax complete, show the modal
        var _showComplete = function (result) {
            console.log("We are logging this click from ajax. - Action Complete");
            clearTimeout(_inDelay);
            if (result.responseText.toLowerCase() === 'success' && result.statusText.toLowerCase() === 'ok') {
                $('#deleteDiv').show("normal");
                $('#failureDiv').hide();
                $('#divProcessing').hide();
            } else {
                $('#deleteDiv').hide();
                $('#failureDiv').show("normal");
                $('#divProcessing').hide();
            }
        }

        // Ajax failure, show the warning
        var _showFailure = function () {
            console.log("We are logging this click from ajax. - Action Failed");
            if (_inDelay == true) {
                _inDelay = null;
            }
            $("#divProcessing").hide();
            $("#failureDiv").show("normal");

        }

        // Public interface
        return {
            logAjaxBegin: _logAjaxBegin,
            showComplete: _showComplete,
            showFailure: _showFailure
        }

    })();
</script>
