@using System.Web.Mvc.Html
@using Psi.Data.Models.Domain.NewMobileFeatures;

@model NewMobileFeatureModel

<div id="new-mobile-features-detail-modal" class="modal fade">
    <!-- Modal Layout -->
    <div class="modal-dialog large">
        <div id="partial-view-modal-content" class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <h4 class="modal-title">
                    Manage Feature - @(ViewBag.Mode == "update" ? Model.Name : "Create New Mobile Feature")
                </h4>
            </div>

            <div class="modal-body">
                <div id="ValidatorDiv" class="alert alert-danger" style="display: none;">
                    There were errors in your form entries:
                </div>

                <div id="successDiv" class="alert alert-success" style="display: none;">
                    <div style="float: right; margin-top: -8px;"><input type="button" class="btn btn-primary" id="CancelFeatureModalButton" value="Continue" data-dismiss="modal" /></div>
                    <div style="width: 50%;">Your feature data has been saved.</div>
                </div>

                <div id="failureDiv" class="alert alert-danger" style="display: none;">
                    <div style="float: right; margin-top: -8px;"><input type="button" class="btn btn-primary" id="CancelFeatureFailureButton" value="Continue" data-dismiss="modal" /></div>
                    We were unable to save your data, please try again later.
                </div>

                <div id="deleteDiv" class="alert alert-warning" style="display: none;">
                    <div style="float: right; margin-top: -8px;"><input type="button" class="btn btn-primary" id="CancelFeatureDeleteButton" value="Continue" data-dismiss="modal" /></div>
                    <div style="width: 50%;">Your feature has been deleted.</div>

                </div>

                <div id="divProcessing" class="text-center" style="display:none; margin-bottom: 14px;">
                    <img src='@Url.Content("~/Images/ajax_loader.gif")' alt="loading" /> &nbsp;Processing Request...
                </div>

                @using (Ajax.BeginForm((ViewBag.Mode == "update" ? "UpdateFeature" : "CreateFeature"), "NewMobileFeatures", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", id = "NewMobileFeaturesForm" }))
                {

                    <div class="form-horizontal">

                        <div class="form-group hide">
                            <label class="col-md-4 control-label">Feature Id</label>
                            <div class="col-md-7">
                                <div class="form-control-static" id="promotionId">
                                    @Model.Id
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label">Feature Name</label>
                            <div class="col-md-5">
                                <div class="form-control-inline">
                                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                                    @Html.HiddenFor(x => x.Id)
                                    <input type="hidden" id="UploadFileTypesHidden" value="jpg,jpeg,png,gif" />
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label">Description</label>
                            <div class="col-md-7">
                                <div class="form-control-inline">
                                    @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label">Deep Link URL</label>
                            <div class="col-md-7">
                                <div class="form-control-inline">
                                    @Html.TextBoxFor(x => x.DeepLinkUrl, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        @if (ViewBag.Mode == "update" && ViewBag.FeatureImageSrc != null && Model.FileName != null)
                        {
                            <div class="form-group">
                                <label class="col-md-4 control-label">Current Image</label>
                                <div class="col-md-7">
                                     <img src="@ViewBag.FeatureImageSrc" alt="Mobile Feature Image" style="max-width: 280px;" />
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">File Name</label>
                                <div class="col-md-7 form-control-static">
                                    @Model.FileName 
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-4 control-label">Remove Image from Feature</label>
                                <div class="col-md-7 form-control-static">
                                    <input type="checkbox" id="RemoveImageCheckbox" />&nbsp;Remove Image?
                                    <input type="hidden" id="RemoveImageHidden" name="RemoveImageHidden" value="no"/>
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            @if (ViewBag.Mode == "update")
                            {
                                <label class="col-md-4 control-label">Or, Upload New Image</label>
                            }
                            else
                            {
                                <label class="col-md-4 control-label">Upload Image</label>
                            }
                            <div class="col-md-7">
                                <div id="image-upload-div" class="form-control-inline">
                                    <label id="CustomFileUploadLabel" for="file-1" class="custom-file-upload">Choose File</label><span id="FileUploadFilenameSpan"></span>
                                    <input id="file-1" type="file" name="file" class="file-upload" /><br />
                                    <span class="small text-muted">(4MB max file size - Only .png, .jpg or .gif file types allowed)</span>
                                </div>
                            </div>
                        </div>
                    </div><!-- end form-horizontal -->

                            <div class="row list-row-buttons">
                                <div class="col-md-8 col-md-offset-4">

                                    @if (ViewBag.Mode == "update")
                {
                                        @Ajax.ActionLink("Delete Feature", "DeleteFeature", "NewMobileFeatures", new { id = Model.Id }, new AjaxOptions
                                       {
                                           HttpMethod = "GET",
                                           OnBegin = "OmegaNewMobileFeatureModalModule.deleteAjaxBegin",
                                           OnComplete = "OmegaNewMobileFeatureModalModule.showDeleteComplete",
                                           OnFailure = "OmegaNewMobileFeatureModalModule.showDeleteFailure",
                                           Confirm = "Are you really sure you want to delete this feature: " + Model.Name + " ?"
                                       }, new { @class = "btn btn-danger", @id = "DeleteButton" })
                                    }
                                    &nbsp;
                                    &nbsp;<input type="submit" value="Save Changes" class="btn btn-primary" id="SubmitButton" />
                                </div>
                            </div>
                }

                <hr />

                <div class="row list-row-buttons">
                    <div class="col-md-6 text-left">
                        <input type="button" class="btn btn-default" id="btnCancel" value="Cancel" data-dismiss="modal" />
                    </div>
                </div>
            </div><!-- End modal-body -->

        </div>
    </div><!-- End modal-dialog -->

    <script>
        $(document).ready(function () {
            // reload the base page after notication continue click
            $("#CancelFeatureDeleteButton, #CancelFeatureModalButton, #CancelFeatureFailureButton").click(function () {
                setTimeout(function () { self.location.href = "NewMobileFeatures" }, 1000);
            });

            $("#RemoveImageCheckbox").change(function () {
                if ($(this).is(':checked')) {
                    $("#RemoveImageHidden").val("yes");
                } else {
                    $("#RemoveImageHidden").val("no");
                }
            });

            // reset all items in modal:
            var _resetAll = function () {
                $("#SubmitButton").prop("disabled", false);
                $("#DeleteButton").prop("disabled", false);
                $("#file-1").val("");
                $("#FileUploadFilenameSpan").text("");
                $("#UserFriendlyNameTextbox").val("");

                $("#ValidatorDiv").hide();
                $("#ValidatorDiv").empty();
                $('#ImageUploadSuccessDiv').hide();
                $('#ImageUploadFailureDiv').hide();
                $('#ImageUploadProcessingDiv').hide();

                document.getElementById("CustomFileUploadLabel").style.outline = "none";
            }


            // reset modal on modal closed event
            $("#new-mobile-features-detail-modal").on('hide.bs.modal', function () {
                _resetAll();
            });


            // Check the file while the user is choosing the upload file before form submit:
            $(".file-upload").bind('change', function () {
                // Check the file size:
                if (this.files[0].size >= 4194304) {   // 4MB -> 4 * 1024 * 1024
                    alert('File is to large for uploading.\n\nThis file size is: ' + this.files[0].size / 1024 / 1024 + " MB.");
                    this.value = "";
                    return;
                }

                // Check the file extention:
                if ($("#UploadFileTypesHidden").val().length > 0) {
                    if (this.files[0] != undefined) {
                        var fileExt = this.files[0].name.split('.').pop();

                        if ($("#UploadFileTypesHidden").val().indexOf(fileExt) == -1) {
                            this.value = "";
                            alert('File is not the right type.\n\nOnly files of this type are allowed: \n\n' + $("#UploadFileTypesHidden").val() + ".");
                            return;
                        }
                    }
                }

                // set the text next to the file upload:
                if (this.files[0]) {
                    $("#FileUploadFilenameSpan").text(this.files[0].name);
                }
            });

            // Form actions
            $("#SubmitButton").prop("disabled", false);
            $("#DeleteButton").prop("disabled", false);

            // Submit the form via AJAX:
            $("#NewMobileFeaturesForm").submit(function (e) {
                $("#SubmitButton").prop("disabled", true);
                $("#DeleteButton").prop("disabled", true);

                var OmegaNewMobileFeaturesTextRegex = /^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$/;
                var OmegaNewMobileFeaturesDeepLinkRegex = /^[A-Za-z0-9 _:]*[A-Za-z0-9][A-Za-z0-9 _:]*$/;
                var newMobileFeaturesFormValid;

                $("#ValidatorDiv").empty();
                $("#ValidatorDiv").text("There were errors in your form entries:");

                // Client side validation
                // Name 
                if ($("#Name").val() === "") {
                    $("#Name").parent().addClass("has-error");
                    $("#ValidatorDiv").append("<br>&bull; Please enter a name.");
                    newMobileFeaturesFormValid = false;
                } else if (!OmegaNewMobileFeaturesTextRegex.test($("#Name").val())) {
                    $("#Name").parent().addClass("has-error");
                    $("#ValidatorDiv").append("<br>&bull; Please enter a valid Name. Only letters, numbers, spaces and the underscore character are allowed.");
                    newMobileFeaturesFormValid = false;
                } else {       
                    $("#Name").parent().removeClass("has-error");
                }

                // Description 
                if ($("#Description").val() === "") {
                    $("#Description").parent().addClass("has-error");
                    $("#ValidatorDiv").append("<br>&bull; Please enter a description.");
                    newMobileFeaturesFormValid = false;
                } else if (!OmegaNewMobileFeaturesTextRegex.test($("#Description").val())) {
                    $("#Description").parent().addClass("has-error");
                    $("#ValidatorDiv").append("<br>&bull; Please enter a valid description. Only letters, numbers, spaces and the underscore character are allowed.");
                    newMobileFeaturesFormValid = false;
                } else {
                    $("#Description").parent().removeClass("has-error");
                }

                // Deep Link 
                if ($("#DeepLinkURL").val() === "") {
                    $("#DeepLinkURL").parent().addClass("has-error");
                    $("#ValidatorDiv").append("<br>&bull; Please enter a deep link URL.");
                    newMobileFeaturesFormValid = false;
                } else if (!OmegaNewMobileFeaturesDeepLinkRegex.test($("#DeepLinkURL").val())) {
                    $("#DeepLinkURL").parent().addClass("has-error");
                    $("#ValidatorDiv").append("<br>&bull; Please enter a valid deep link. Only letters, numbers, spaces, the colon symbol, and the underscore character are allowed.");
                    newMobileFeaturesFormValid = false;
                } else {
                    $("#DeepLinkURL").parent().removeClass("has-error");
                }

                // Check size of file selection (technically, we should never get here because of the binding check above):
                if ($("#file-1")[0].files[0] != undefined && $("#file-1")[0].files[0].size >= 4194304) {     // 4MB -> 4 * 1024 * 1024
                    $("#file-1").val("");
                    newMobileFeaturesFormValid = false;
                }

                // Check type of file selection (.jpg, .png, .gif) (technically, we should never get here because of the binding check above):
                if ($("#file-1")[0].files[0] != undefined) {
                    var fileExt = $("#file-1")[0].files[0].name.split('.').pop();

                    if ($("#UploadFileTypesHidden").val().indexOf(fileExt) == -1) {
                        $("#file-1").val("");
                        newMobileFeaturesFormValid = false;
                    }
                }

                if (newMobileFeaturesFormValid === false) {
                    $("#ValidatorDiv").show("normal");
                    return false;
                }

                // Form is valid, submit it:
                $("#ValidatorDiv").hide();
                $("#SubmitButton").html("Saving...");
                $("#SubmitButton").prop('disabled', true);
                $('#divProcessing').show("normal");

                var newMobileFeaturesForm = e.target;
                if ($(newMobileFeaturesForm).attr("enctype") === "multipart/form-data") {
                    console.info("entering the submit process...");
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(newMobileFeaturesForm.method, newMobileFeaturesForm.action);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200 && xhr.response.toLowerCase() === "success") {         // success
                            $('#successDiv').show("normal");
                            $('#failureDiv').hide();
                            $('#divProcessing').hide();
                        } else if (xhr.readyState == 4 && xhr.response.toLowerCase() !== "success") {
                            $('#successDiv').hide();
                            $('#failureDiv').show("normal");
                            $('#divProcessing').hide();
                            $("#SubmitButton").prop("disabled", false)
                        }
                    };
                    xhr.send(new FormData(newMobileFeaturesForm));
                }
           
            });

        }); // end document ready

        var OmegaNewMobileFeatureModalModule = OmegaNewMobileFeatureModalModule || {};

        OmegaNewMobileFeatureModalModule = (function () {
            // local vars:
            var _inDelay = false;

            // Ajax starting, getting a record detail
            var _deleteAjaxBegin = function () {
                console.log("We are logging this click from ajax. - Action Begun from OmegaTargetedMarketingManagePromotionsModal");
                _inDelay = setTimeout(_showSpinner, 1000); // using setTimeout because jQuery delay only works on animate
                $("#failureDiv").hide();
                $("#SubmitButton").prop("disabled", true);
                $("#DeleteButton").prop("disabled", true);
            }

            // show the spinner in a div to let the user know that the record is loading
            var _showSpinner = function () {
                $('#divProcessing').show("normal");
            }

            // Ajax complete, show the modal
            var _showDeleteComplete = function (result) {
                console.log("We are logging this click from ajax. - Action Complete");
                clearTimeout(_inDelay);
                if (result.responseText.toLowerCase() === 'success' && result.statusText.toLowerCase() === 'ok') {
                    $('#deleteDiv').show("normal");
                    $('#failureDiv').hide();
                    $('#divProcessing').hide();
                } else {
                    $('#deleteDiv').hide();
                    $('#failureDiv').show("normal");
                    $('#divProcessing').hide();
                }
            }

            // Ajax failure, show the warning
            var _showDeleteFailure = function () {
                console.log("We are logging this click from ajax. - Action Failed");
                if (_inDelay == true) {
                    _inDelay = null;
                }
                $("#divProcessing").hide();
                $("#failureDiv").show("normal");

            }

            // Public interface
            return {
                deleteAjaxBegin: _deleteAjaxBegin,
                showDeleteComplete: _showDeleteComplete,
                showDeleteFailure: _showDeleteFailure
            }

        })();
    </script>

</div>

 