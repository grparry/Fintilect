{
  "openapi": "3.0.0",
  "info": {
    "title": "CBP Admin CU API",
    "version": "1.0.0",
    "description": "Connect Bill Pay Admin Credit Union API Specification"
  },
  "paths": {
    "/api/v1/payment/change-history": {
      "post": {
        "summary": "Returns scheduled payment change history within the given start and end date with a matching search value",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentChangeHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/recurring/change-history": {
      "post": {
        "summary": "Returns recurring payment change history within the given start and end date with a matching search value",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentChangeHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/pending": {
      "post": {
        "summary": "Returns pending payments on the given search date as well as other payments in the same batch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingPaymentListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/pending-payments": {
      "post": {
        "summary": "Returns pending payments on the given search date as well as other payments in the same batch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingPaymentSearchResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/activity": {
      "post": {
        "summary": "Returns payment activity as specified in the request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentActivityListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/reprocess": {
      "post": {
        "summary": "Queues a payment for reprocessing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReprocessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A payment could not be found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/confirmation": {
      "post": {
        "summary": "Sends the payment confirmation notification to CU",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/status": {
      "post": {
        "summary": "Updates the status of a payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A payment could not be found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/{paymentId}": {
      "put": {
        "summary": "Edit's a payment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "The ID of the payment to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request received"
          },
          "404": {
            "description": "No resource found at the given memberId and paymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "delete": {
        "summary": "Cancels a payment based on id",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "The ID of the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request received"
          },
          "404": {
            "description": "No payment found with requested paymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/cancel-payment-refund": {
      "post": {
        "summary": "Cancels a payment based on paymentId and refunds based on exceptionId",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentAndRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request received"
          },
          "404": {
            "description": "No payment found with requested paymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/institution-info": {
      "post": {
        "summary": "Create a new institution info",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "summary": "Update an institution info",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/payee/global/close": {
      "post": {
        "summary": "Closed an FIS global payee",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeCloseGlobalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "No global payee found at the given FisPayeeId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/copy-payees": {
      "post": {
        "summary": "Creates a new UserPayeeList entry with the old data and the new memberid",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyMemberPayeesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/user/change-history": {
      "post": {
        "summary": "Runs the report on user payee change histories",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeChangeHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/global/change-history": {
      "post": {
        "summary": "Runs the report on global payee change histories",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPayeeChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPayeeChangeHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/user/account-number": {
      "post": {
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateAccountNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/account-number-reprocess": {
      "post": {
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList and resubmits the payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndReprocessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/account-number-refund": {
      "post": {
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList and resubmits the payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndRefund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/user/fis-payee-id": {
      "post": {
        "summary": "Updates the FisPayeeId for a UserPayeeList",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateFisPayeeIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/user/fis-payee-refund": {
      "post": {
        "summary": "Updates the FisPayeeId for a UserPayeeList and refunds the payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFisPayeeIdAndRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/manual-exception-reprocess": {
      "post": {
        "summary": "Performs a manual update on exception and refunds the payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/exception/{date}": {
      "get": {
        "summary": "Gets exceptions for a given date",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "description": "The date of the exceptions",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentExceptionListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/exception/refund": {
      "post": {
        "summary": "Refunds a Payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExceptionRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/saved/clear": {
      "post": {
        "summary": "Clears all saved notifications up to a given date",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationClearRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification": {
      "post": {
        "summary": "Adds a new notification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "409": {
            "description": "The requested notification conflicts with an existing notification (same status code or error code)"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "summary": "Edits an existing notification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/{notificationId}": {
      "delete": {
        "summary": "Deletes a notification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "description": "The id of the notification to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "get": {
        "summary": "Gets an existing notification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "description": "The id of the notification to get",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/all": {
      "get": {
        "summary": "Gets all notifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/configured": {
      "get": {
        "summary": "Gets configured notifications for symmetry or Emerge",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/search": {
      "post": {
        "summary": "Searched saved notifications",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedNotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send/customer": {
      "post": {
        "summary": "Sends a Notification to the customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send": {
      "post": {
        "summary": "Sends a Notification based on status code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send/support": {
      "post": {
        "summary": "Sends a support notification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendSupportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/run/manual": {
      "post": {
        "summary": "Creates and queues a new manual payment processing run",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualRunCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid process date"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/report/run": {
      "post": {
        "summary": "Runs the report on the specified request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jsonResponse": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "Endpoint was not found"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/paymenthistory/error-recap": {
      "post": {
        "summary": "Runs the report on ErrorRecap",
        "description": "SearchType of Type \"ErrorHistorySearchType\"\nValid Values:\n0 - PaymentId\n1 - MemberId\n2 - UserPayeeListId\n3 - StatusCode\n4 - Date\n5 - PayeeId\n6 - PayeeName",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/paymenthistory/large-payment/{runDate}": {
      "get": {
        "summary": "Runs the report on ErrorRecap",
        "parameters": [
          {
            "name": "runDate",
            "in": "path",
            "required": true,
            "description": "The runDate of the report",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LargePaymentListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/search/payment-information": {
      "post": {
        "summary": "Search Payments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInformationSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformationSearchResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentActivityResponse": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "fisPayeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusCode": {
            "type": "integer"
          },
          "statusName": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "PaymentActivityListResponse": {
        "type": "object",
        "properties": {
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentActivity"
            }
          }
        }
      },
      "PaymentActivity": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "processDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "activityDate": {
            "type": "string",
            "format": "date-time"
          },
          "activityType": {
            "type": "string"
          }
        }
      },
      "PendingPaymentResponse": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          }
        }
      },
      "PendingPaymentListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingPayment"
            }
          }
        }
      },
      "PendingPayment": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "processDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "PendingPaymentSearchResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingPaymentSearch"
            }
          }
        }
      },
      "PendingPaymentSearch": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "processDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "PendingPaymentsRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PendingPaymentSearchRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "sponsorIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PaymentActivityRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "sponsorId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          }
        }
      },
      "PaymentReprocessRequest": {
        "type": "object",
        "required": ["paymentId"],
        "properties": {
          "paymentId": {
            "type": "string"
          }
        }
      },
      "PaymentUpdateStatusRequest": {
        "type": "object",
        "required": ["paymentId", "statusCode"],
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "PaymentEditRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "frequency": {
            "type": "integer"
          },
          "numPayments": {
            "type": "integer"
          }
        }
      },
      "CancelPaymentAndRefundRequest": {
        "type": "object",
        "required": ["paymentId"],
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "exceptionId": {
            "type": "integer"
          }
        }
      },
      "InstitutionInfoCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "routingNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": ["name", "routingNumber"]
      },
      "InstitutionInfoUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "routingNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": ["id"]
      },
      "ErrorHistoryResponse": {
        "type": "object",
        "properties": {
          "failedDate": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "userPayeeListId": {
            "type": "string"
          },
          "usersAccountAtPayee": {
            "type": "string"
          },
          "nameOnAccount": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "hostCode": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "PayeeCloseGlobalRequest": {
        "type": "object",
        "required": ["fisPayeeId"],
        "properties": {
          "fisPayeeId": {
            "type": "string"
          }
        }
      },
      "CopyMemberPayeesRequest": {
        "type": "object",
        "required": ["memberId", "newMemberId"],
        "properties": {
          "memberId": {
            "type": "string"
          },
          "newMemberId": {
            "type": "string"
          }
        }
      },
      "UserPayeeChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchValue": {
            "type": "string"
          }
        }
      },
      "GlobalPayeeChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchValue": {
            "type": "string"
          }
        }
      },
      "UserPayeeUpdateAccountNumberRequest": {
        "type": "object",
        "required": ["userPayeeListId", "accountNumber"],
        "properties": {
          "userPayeeListId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          }
        }
      },
      "UpdateAccountAndReprocessRequest": {
        "type": "object",
        "required": ["userPayeeListId", "accountNumber"],
        "properties": {
          "userPayeeListId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          }
        }
      },
      "UpdateAccountAndRefund": {
        "type": "object",
        "required": ["userPayeeListId", "accountNumber"],
        "properties": {
          "userPayeeListId": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          }
        }
      },
      "UserPayeeUpdateFisPayeeIdRequest": {
        "type": "object",
        "required": ["userPayeeListId", "fisPayeeId"],
        "properties": {
          "userPayeeListId": {
            "type": "string"
          },
          "fisPayeeId": {
            "type": "string"
          }
        }
      },
      "UpdateFisPayeeIdAndRefundRequest": {
        "type": "object",
        "required": ["userPayeeListId", "fisPayeeId"],
        "properties": {
          "userPayeeListId": {
            "type": "string"
          },
          "fisPayeeId": {
            "type": "string"
          }
        }
      },
      "ManualUpdateRequest": {
        "type": "object",
        "required": ["userPayeeListId"],
        "properties": {
          "userPayeeListId": {
            "type": "string"
          }
        }
      },
      "ExceptionRefundRequest": {
        "type": "object",
        "required": ["paymentId", "exceptionId"],
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "exceptionId": {
            "type": "integer"
          }
        }
      },
      "PaymentExceptionListResponse": {
        "type": "object",
        "properties": {
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentException"
            }
          }
        }
      },
      "PaymentException": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "sponsorId": {
            "type": "string"
          },
          "exceptionCode": {
            "type": "integer"
          },
          "exceptionMessage": {
            "type": "string"
          },
          "exceptionDate": {
            "type": "string",
            "format": "date-time"
          },
          "correctionDate": {
            "type": "string",
            "format": "date-time"
          },
          "correctionUser": {
            "type": "string"
          },
          "correctionNote": {
            "type": "string"
          }
        }
      },
      "ExceptionRefundResponse": {
        "type": "object",
        "properties": {
          "refundAmount": {
            "type": "number",
            "format": "decimal"
          },
          "refundDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SavedNotificationClearRequest": {
        "type": "object",
        "required": ["clearUpToDate"],
        "properties": {
          "clearUpToDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationCreateRequest": {
        "type": "object",
        "required": ["messageSubject", "messageBody"],
        "properties": {
          "messageSubject": {
            "type": "string"
          },
          "messageBody": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "errorCode": {
            "type": "integer"
          }
        }
      },
      "NotificationUpdateRequest": {
        "type": "object",
        "required": ["id", "messageSubject", "messageBody"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageSubject": {
            "type": "string"
          },
          "messageBody": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "errorCode": {
            "type": "integer"
          }
        }
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageSubject": {
            "type": "string"
          },
          "messageBody": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "errorCode": {
            "type": "integer"
          }
        }
      },
      "NotificationListResponse": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationResponse"
            }
          }
        }
      },
      "SavedNotificationSearchRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchValue": {
            "type": "string"
          }
        }
      },
      "SavedNotificationListResponse": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SavedNotification"
            }
          }
        }
      },
      "SavedNotification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageSubject": {
            "type": "string"
          },
          "messageBody": {
            "type": "string"
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationSendCustomerRequest": {
        "type": "object",
        "required": ["memberId", "paymentId"],
        "properties": {
          "memberId": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          }
        }
      },
      "NotificationSendRequest": {
        "type": "object",
        "required": ["statusCode"],
        "properties": {
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "NotificationSendSupportRequest": {
        "type": "object",
        "required": ["subject", "body"],
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "ManualRunCreateRequest": {
        "type": "object",
        "required": ["processDate"],
        "properties": {
          "processDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorHistoryReportRequest": {
        "type": "object",
        "properties": {
          "searchType": {
            "type": "integer",
            "description": "0 - PaymentId, 1 - MemberId, 2 - UserPayeeListId, 3 - StatusCode, 4 - Date, 5 - PayeeId, 6 - PayeeName",
            "enum": [0, 1, 2, 3, 4, 5, 6]
          },
          "searchValue": {
            "type": "string"
          }
        }
      },
      "ErrorHistoryListResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorHistory"
            }
          }
        }
      },
      "ErrorHistory": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "statusCode": {
            "type": "integer"
          },
          "errorDate": {
            "type": "string",
            "format": "date-time"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "LargePaymentListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LargePayment"
            }
          }
        }
      },
      "LargePayment": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "processDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReportRunRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The stored procedure string"
          },
          "arguments": {
            "type": "object",
            "description": "The arguments to the procedure",
            "additionalProperties": true
          }
        }
      },
      "PaymentInformationSearchRequest": {
        "type": "object",
        "properties": {
          "searchType": {
            "type": "integer",
            "description": "The type of value to search on"
          },
          "searchValue": {
            "type": "string",
            "description": "The value to search for"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaymentInformationSearchResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInformation"
            }
          }
        }
      },
      "PaymentInformation": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "sponsorId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeName": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "processDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "paymentType": {
            "type": "string"
          },
          "paymentTypeCode": {
            "type": "integer"
          },
          "accountNumber": {
            "type": "string"
          }
        }
      },
      "PaymentChangeHistoryResponse": {
        "type": "object",
        "properties": {
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentChangeHistory"
            }
          }
        }
      },
      "PaymentChangeHistory": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          },
          "changeType": {
            "type": "string"
          },
          "oldValue": {
            "type": "string"
          },
          "newValue": {
            "type": "string"
          }
        }
      }
    }
  }
}
