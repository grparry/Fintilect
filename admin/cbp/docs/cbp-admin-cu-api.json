{
  "openapi": "3.0.1",
  "info": {
    "title": "ConnectBillPay.AdminCuApi",
    "version": "v1"
  },
  "paths": {
    "/api/v1/report/activeusercount": {
      "get": {
        "tags": [
          "ActiveUserCount"
        ],
        "summary": "Retrieves paginated active user count data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- DateRange: StartDate, EndDate\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/ActiveUserCount?SearchType=DateRange&StartDate=2023-01-01&EndDate=2023-12-31\r\n\r\nSupported sort columns: MemberID (default), LastActivityDate\r\nSort directions: ASC (ascending, default), DESC (descending)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "DateRange"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActiveUserCountSearchType"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to search from (required)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to search to (required)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "MemberID",
                "LastActivityDate",
                "FirstName",
                "LastName",
                "Email",
                "PaymentCount"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActiveUserCountSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfActiveUserCountItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/calendar/holiday": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Adds a new holiday",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "409": {
            "description": "The requested holiday conflicts with an existing holday (same date)."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Edits an existing credit union holiday",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayUpdateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayUpdateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Calendar.HolidayUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested holiday could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/calendar/holiday/{holidayId}": {
      "delete": {
        "tags": [
          "Calendar"
        ],
        "summary": "Deletes a holiday",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The id of the holiday to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested holiday could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Gets an existing credit union holiday",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The id of the holiday to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Calendar.HolidayResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Calendar.HolidayResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Calendar.HolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested holiday could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/calendar/holiday/all/{sponsorId}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Gets all credit union holidays",
        "parameters": [
          {
            "name": "sponsorId",
            "in": "path",
            "description": "The credit union sponsor id (0 for global only)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Calendar.HolidayListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Calendar.HolidayListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Calendar.HolidayListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/configuration": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Creates a configuration entry in the configuration table",
        "requestBody": {
          "description": "configuration to be added to configuration table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Configuration already exists with the given ConfigName"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "summary": "Creates a configuration entry in the configuration table",
        "requestBody": {
          "description": "configuration to be updated",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationUpdateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationUpdateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Configuration.ConfigurationUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Could not fine config to update"
          },
          "409": {
            "description": "Configuration already exists with the given ConfigName"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/configuration/{id}": {
      "delete": {
        "tags": [
          "Configuration"
        ],
        "summary": "Deletes a configuration entry with the given config name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A configuration at the given name was not found."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Brings back a configuration entry from the configuration table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of configuration be looked for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Configuration.ConfigurationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Configuration.ConfigurationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Configuration.ConfigurationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          },
          "400": {
            "description": "config was null"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/configuration/all": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Brings back a all configurations  from the configuration table",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Configuration.ConfigurationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Configuration.ConfigurationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Configuration.ConfigurationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/configuration/refresh": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Refreshes stored configuration settings",
        "responses": {
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Creates a contact entry in the Contact table",
        "requestBody": {
          "description": "contact to be added to Contact table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Contact already exists"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Edits a record in the Contact table",
        "requestBody": {
          "description": "The updated contact record data with the record Id",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactUpdateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactUpdateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Contact.ContactUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Request Id is invalid."
          },
          "404": {
            "description": "Unable to find contact record with the given request Id."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/contact/{id}": {
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes a contact entry in the Contact table as the given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Unable to find a contact at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/contact/all": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Brings back a list of all contacts from the Contact table",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Contact.ContactListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Contact.ContactListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Contact.ContactListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Creates a customer entry in the Customer table",
        "requestBody": {
          "description": "customer to be added to Customer table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Customer.CustomerCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Customer.CustomerCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Customer.CustomerCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Customer.CustomerCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Customer.CustomerCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Customer.CustomerCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Customer.CustomerCreateResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/report/errorrecap": {
      "get": {
        "tags": [
          "ErrorRecap"
        ],
        "summary": "Retrieves paginated error recap data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- PaymentID: PaymentID\r\n- MemberID: MemberID\r\n- UserPayeeListID: UserPayeeListID\r\n- StatusCode: StatusCode\r\n- DateRange: StartDate, EndDate\r\n- PayeeID: PayeeID\r\n- PayeeName: PayeeName\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/ErrorRecap?SearchType=PaymentID&PaymentID=PAY123456\r\n    GET /api/v1/Report/ErrorRecap?SearchType=MemberID&MemberID=12345\r\n    GET /api/v1/Report/ErrorRecap?SearchType=UserPayeeListID&UserPayeeListID=UPL789\r\n    GET /api/v1/Report/ErrorRecap?SearchType=StatusCode&StatusCode=ERROR123\r\n    GET /api/v1/Report/ErrorRecap?SearchType=DateRange&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/ErrorRecap?SearchType=PayeeID&PayeeID=P456\r\n    GET /api/v1/Report/ErrorRecap?SearchType=PayeeName&PayeeName=ACME\r\n\r\nSupported sort columns: FailedDate (default), MemberID, PaymentID, Amount, UserPayeeListID, PayeeID, PayeeName, Status\r\nSort directions: ASC (ascending), DESC (descending, default)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "PaymentID",
                "MemberID",
                "UserPayeeListID",
                "StatusCode",
                "DateRange",
                "PayeeID",
                "PayeeName"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorRecapSearchType"
                }
              ]
            }
          },
          {
            "name": "PaymentID",
            "in": "query",
            "description": "Payment ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MemberID",
            "in": "query",
            "description": "Member ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserPayeeListID",
            "in": "query",
            "description": "User Payee List ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCode",
            "in": "query",
            "description": "Status code to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to search from (used when SearchType is DateRange)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to search to (used when SearchType is DateRange)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PayeeID",
            "in": "query",
            "description": "Payee ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayeeName",
            "in": "query",
            "description": "Payee name to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "FailedDate",
                "MemberID",
                "PaymentID",
                "Amount",
                "UserPayeeListID",
                "PayeeID",
                "PayeeName",
                "Status"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorRecapSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfErrorRecapItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/exception/{date}": {
      "get": {
        "tags": [
          "Exception"
        ],
        "summary": "Gets exceptions for a given date",
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "The date of the exceptions",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Exception.PaymentExceptionListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Exception.PaymentExceptionListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Exception.PaymentExceptionListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/exception/refund": {
      "post": {
        "tags": [
          "Exception"
        ],
        "summary": "Refunds a Payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Exception.ExceptionRefundRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Exception.ExceptionRefundRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Exception.ExceptionRefundRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Exception.ExceptionRefundRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Exception.ExceptionRefundResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Exception.ExceptionRefundResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Exception.ExceptionRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/report/failedonus": {
      "get": {
        "tags": [
          "FailedOnUs"
        ],
        "summary": "Retrieves paginated failed on-us payment data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- DateRange: StartDate, EndDate\r\n- PaymentID: PaymentID, StartDate, EndDate\r\n- MemberID: MemberID, StartDate, EndDate\r\n- UserPayeeListID: UserPayeeListID, StartDate, EndDate\r\n- StatusCode: StatusCode, StartDate, EndDate\r\n- PayeeID: PayeeID, StartDate, EndDate\r\n- PayeeName: PayeeName, StartDate, EndDate\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/FailedOnUs?SearchType=DateRange&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/FailedOnUs?SearchType=PaymentID&PaymentID=PAY123456&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/FailedOnUs?SearchType=MemberID&MemberID=12345&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/FailedOnUs?SearchType=UserPayeeListID&UserPayeeListID=UPL789&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/FailedOnUs?SearchType=StatusCode&StatusCode=ERROR123&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/FailedOnUs?SearchType=PayeeID&PayeeID=P456&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/FailedOnUs?SearchType=PayeeName&PayeeName=ACME&StartDate=2023-01-01&EndDate=2023-12-31\r\n\r\nSupported sort columns: FailedDate (default), ProcessedDate, MemberID, PaymentID, Amount, PayeeID, PayeeName, Status, StatusCode\r\nSort directions: ASC (ascending), DESC (descending, default)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "DateRange",
                "PaymentID",
                "MemberID",
                "UserPayeeListID",
                "StatusCode",
                "PayeeID",
                "PayeeName"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/FailedOnUsSearchType"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to search from (required for all search types)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to search to (required for all search types)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PaymentID",
            "in": "query",
            "description": "Payment ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MemberID",
            "in": "query",
            "description": "Member ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserPayeeListID",
            "in": "query",
            "description": "User Payee List ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCode",
            "in": "query",
            "description": "Status code to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayeeID",
            "in": "query",
            "description": "Payee ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayeeName",
            "in": "query",
            "description": "Payee name to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "FailedDate",
                "ProcessedDate",
                "MemberID",
                "PaymentID",
                "Amount",
                "UserPayeeListID",
                "PayeeID",
                "PayeeName",
                "Status",
                "StatusCode"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/FailedOnUsSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfFailedOnUsItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/report/globalholidays": {
      "get": {
        "tags": [
          "GlobalHolidays"
        ],
        "summary": "Retrieves paginated global holidays data",
        "description": "This endpoint retrieves global holidays data with pagination and sorting.\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/GlobalHolidays?SearchType=All\r\n\r\nSupported sort columns: Date (default), Id, Description, HolidayType\r\nSort directions: ASC (ascending, default), DESC (descending)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "All"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/GlobalHolidaysSearchType"
                }
              ]
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "Date",
                "Id",
                "Description",
                "HolidayType"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/GlobalHolidaysSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfGlobalHolidaysItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/institutioninfo": {
      "post": {
        "tags": [
          "InstitutionInfo"
        ],
        "summary": "Creates an institution information entry in the InstitutionInfo table / only one is allowed",
        "requestBody": {
          "description": "institution information to be added to InstitutionInfo table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Institution Info already exists"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "get": {
        "tags": [
          "InstitutionInfo"
        ],
        "summary": "Brings back the institutionInfo record if it exists",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.InstitutionInfoResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.InstitutionInfoResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.InstitutionInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "No institutionInfo record exists"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": [
          "InstitutionInfo"
        ],
        "summary": "Edits an record within the InstitutionInfo table.",
        "requestBody": {
          "description": "The updated institution information keyed by the request Id.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoUpdateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoUpdateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.Requests.InstitutionInfoUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The request Id in invalid."
          },
          "404": {
            "description": "An institution info record was not found at the request Id."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/largepayment": {
      "post": {
        "tags": [
          "LargePayment"
        ],
        "summary": "Gets a paged list of large payments based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.LargePaymentRequest"
                  }
                ],
                "description": "Request model for the Large Payment report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.LargePaymentRequest"
                  }
                ],
                "description": "Request model for the Large Payment report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.LargePaymentRequest"
                  }
                ],
                "description": "Request model for the Large Payment report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.LargePaymentRequest"
                  }
                ],
                "description": "Request model for the Large Payment report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the large payments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfLargePaymentItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/monthlyusers": {
      "get": {
        "tags": [
          "MonthlyUsers"
        ],
        "summary": "Retrieves paginated monthly users data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- DateRange: StartDate, EndDate\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/MonthlyUsers?SearchType=DateRange&StartDate=2023-01-01&EndDate=2023-12-31\r\n\r\nSupported sort columns: MemberID (default), NumberOfPayments\r\nSort directions: ASC (ascending, default), DESC (descending)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "DateRange"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/MonthlyUsersSearchType"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to search from (required)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to search to (required)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "MemberID",
                "NumberOfPayments"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/MonthlyUsersSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfMonthlyUsersItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/notification/saved/clear": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Clears all saved notifications up to a given date",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationClearRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationClearRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationClearRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationClearRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Adds a new notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "The requested notification conflicts with an existing notification (same status code or error code).",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Edits an existing notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationUpdateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationUpdateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/{notificationId}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Deletes a notification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The id of the notification to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Gets an existing notification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The id of the notification to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/all": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Gets all notifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/configured": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Gets configured notifications for symmetry or Emerge",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/search": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Searched saved notifications",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationSearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationSearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationSearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.SavedNotificationSearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.SavedNotificationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.SavedNotificationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Responses.SavedNotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/send/customer": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Sends a Notification to the customer",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendCustomerRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendCustomerRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendCustomerRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendCustomerRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Sends a Notification based on status code",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send/support": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Sends a support notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendSupportRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendSupportRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendSupportRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Notification.NotificationSendSupportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/ofacexceptions": {
      "get": {
        "tags": [
          "OFACExceptions"
        ],
        "summary": "Gets a paged list of OFAC exceptions",
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "schema": {
              "enum": [
                "SponsorTransactionId",
                "SponsorId",
                "SponsorName",
                "CustomerId",
                "PrimaryCustomerFirstName",
                "PrimaryCustomerLastName",
                "BusinessName",
                "PayeeName",
                "ConfirmationNumber",
                "TransactionAmount",
                "ServiceRequestNumber",
                "ServiceRequestDate",
                "CheckNumber",
                "Created"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OFACExceptionsSortColumn"
                }
              ]
            }
          },
          {
            "name": "SearchType",
            "in": "query",
            "description": "Gets or sets the search type.",
            "required": true,
            "schema": {
              "enum": [
                "SingleDate",
                "MonthYear",
                "DateRange",
                "All"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OFACExceptionsSearchType"
                }
              ]
            }
          },
          {
            "name": "SelectedSingleDate",
            "in": "query",
            "description": "Gets or sets the selected single date for filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MonthSelected",
            "in": "query",
            "description": "Gets or sets the selected month for filtering.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "YearSelected",
            "in": "query",
            "description": "Gets or sets the selected year for filtering.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SelectedStartDate",
            "in": "query",
            "description": "Gets or sets the start date for date range filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SelectedEndDate",
            "in": "query",
            "description": "Gets or sets the end date for date range filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfOFACExceptionsItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfOFACExceptionsItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfOFACExceptionsItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/onus/payment/{id}": {
      "get": {
        "tags": [
          "OnUs"
        ],
        "summary": "Gets an OnUsPayment by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the OnUsPayment to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No OnUsPayment resource found at the given ID."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/payment/repost": {
      "put": {
        "tags": [
          "OnUs"
        ],
        "summary": "Reposts an OnUsPayment with updated values",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRepostRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRepostRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRepostRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRepostRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "No OnUsPayment resource found at the given ID."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/payment/refund": {
      "put": {
        "tags": [
          "OnUs"
        ],
        "summary": "Refunds an OnUsPayment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRefundAndCancelRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRefundAndCancelRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRefundAndCancelRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.OnUsPaymentRefundAndCancelRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "No OnUsPayment resource found at the given ID."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/failed-on-us": {
      "post": {
        "tags": [
          "OnUs"
        ],
        "summary": "Runs the report on FailedOnUs",
        "requestBody": {
          "description": "The request parameters of the report",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.FailedOnUsRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.FailedOnUsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.FailedOnUsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.OnUs.FailedOnUsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.OnUs.FailedOnUsListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.OnUs.FailedOnUsListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.OnUs.FailedOnUsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/onuspostings": {
      "get": {
        "tags": [
          "OnUsPostings"
        ],
        "summary": "Retrieves paginated on-us postings data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- DateRange: StartDate, EndDate\r\n- PaymentID: PaymentID, StartDate, EndDate\r\n- MemberID: MemberID, StartDate, EndDate\r\n- AccountID: AccountID, StartDate, EndDate\r\n- LoanID: LoanID, StartDate, EndDate\r\n- RunID: RunID, StartDate, EndDate\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/OnUsPostings?SearchType=DateRange&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/OnUsPostings?SearchType=PaymentID&PaymentID=PAY123456&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/OnUsPostings?SearchType=MemberID&MemberID=12345&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/OnUsPostings?SearchType=AccountID&AccountID=ACC789&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/OnUsPostings?SearchType=LoanID&LoanID=LOAN456&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/OnUsPostings?SearchType=RunID&RunID=RUN123&StartDate=2023-01-01&EndDate=2023-12-31\r\n\r\nSupported sort columns: PaymentID (default), MemberID, EntryDate, ModifiedDate, Amount, AccountID, LoanID, ErrorCode, RunID\r\nSort directions: ASC (ascending, default), DESC (descending)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "DateRange",
                "PaymentID",
                "MemberID",
                "AccountID",
                "LoanID",
                "RunID"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OnUsPostingsSearchType"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to search from (required for all search types)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to search to (required for all search types)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PaymentID",
            "in": "query",
            "description": "Payment ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MemberID",
            "in": "query",
            "description": "Member ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountID",
            "in": "query",
            "description": "Account ID (Funding Account) to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoanID",
            "in": "query",
            "description": "Loan ID (User's Account At Payee) to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RunID",
            "in": "query",
            "description": "Run ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "PaymentID",
                "MemberID",
                "EntryDate",
                "ModifiedDate",
                "Amount",
                "AccountID",
                "LoanID",
                "ErrorCode",
                "RunID"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OnUsPostingsSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfOnUsPostingsItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/payee/global/close": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Closed an FIS global payee",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.PayeeCloseGlobalRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.PayeeCloseGlobalRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.PayeeCloseGlobalRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.PayeeCloseGlobalRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "No global payee found at the given FisPayeeId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/copy-payees": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Creates a new UserPayeeList entry with the old data and the new memberid",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.CopyMemberPayeesRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.CopyMemberPayeesRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.CopyMemberPayeesRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.CopyMemberPayeesRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/change-history": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Runs the report on user payee change histories",
        "requestBody": {
          "description": "The request parameters of the report",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.UserPayeeChangeHistoryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.UserPayeeChangeHistoryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.UserPayeeChangeHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/global/change-history": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Runs the report on global payee change histories",
        "requestBody": {
          "description": "The request parameters of the report",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.GlobalPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.GlobalPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.GlobalPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.GlobalPayeeChangeHistoryReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.GlobalPayeeChangeHistoryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.GlobalPayeeChangeHistoryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.GlobalPayeeChangeHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/account-number": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateAccountNumberRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateAccountNumberRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateAccountNumberRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateAccountNumberRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/account-number-reprocess": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList and resubmits the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateAccountAndReprocessRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateAccountAndReprocessRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateAccountAndReprocessRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateAccountAndReprocessRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/account-number-refund": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList and resubmits the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAccountAndRefund"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAccountAndRefund"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAccountAndRefund"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAccountAndRefund"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/fis-payee-id": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the FisPayeeId for a UserPayeeList",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateFisPayeeIdRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateFisPayeeIdRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateFisPayeeIdRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UserPayeeUpdateFisPayeeIdRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/fis-payee-refund": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the FisPayeeId for a UserPayeeList and refunds the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateFisPayeeIdAndRefundRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateFisPayeeIdAndRefundRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateFisPayeeIdAndRefundRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.UpdateFisPayeeIdAndRefundRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/manual-exception-reprocess": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Performs a manual update on exception and refunds the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.ManualUpdateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.ManualUpdateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.ManualUpdateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payee.ManualUpdateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.Core.Classes.ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/member/{memberId}": {
      "get": {
        "tags": [
          "Payee"
        ],
        "summary": "Get a list of payees for a member",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "The member ID to get payees for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of payees (may be empty)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.UserPayeeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.UserPayeeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Payee.UserPayeeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/report/payee": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Gets a paged list of payees based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PayeeRequest"
                  }
                ],
                "description": "Request model for the Payee report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PayeeRequest"
                  }
                ],
                "description": "Request model for the Payee report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PayeeRequest"
                  }
                ],
                "description": "Request model for the Payee report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PayeeRequest"
                  }
                ],
                "description": "Request model for the Payee report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the payees.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPayeeItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/change-history": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns scheduled payment change history within the given start and end date with a matching search value",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.ScheduledPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.ScheduledPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.ScheduledPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.ScheduledPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/recurring/change-history": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns recurring payment change history within the given start and end date with a matching search value",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.RecurringPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.RecurringPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.RecurringPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.RecurringPaymentChangeHistoryReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/pending": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns pending payments on the given search date as well as other payments in the same batch",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentsRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentsRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentsRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/pending-payments": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns pending payments on the given search date as well as other payments in the same batch",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentSearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentSearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentSearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PendingPaymentSearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/activity": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns payment activity as specified in the request",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentActivityRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentActivityRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentActivityRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentActivityRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/reprocess": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Queues a payment for reprocessing",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentReprocessRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentReprocessRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentReprocessRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentReprocessRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A payment could not be found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/confirmation": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Sends the payment confirmation notification to CU",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payment/status": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Updates the status of a payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentUpdateStatusRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentUpdateStatusRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentUpdateStatusRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentUpdateStatusRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A payment could not be found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/{paymentId}": {
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Edit's a payment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment to edit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Account              - The account that is funding the payment\r\nMemberId             - The payer's member Id\r\nAmount               - The account funding the payment\r\nWillProcessDate      - The date the payment will process\r\nFrequency            - Frequency for Recurring Payments\r\nNumPayments          - NumPayments for Recurring Payments",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentEditRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentEditRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentEditRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.PaymentEditRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No resource found at the given memberId and paymentId."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Cancels a payment based on id",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No payment found with requested paymentId."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payment/cancel-payment-refund": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Cancels a payment based on paymentId and refunds based on exceptionId",
        "requestBody": {
          "description": "PaymentId              - The Connect Bill Pay PaymentId\r\nExceptionId            - The ExceptionId from Fis",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.CancelPaymentAndRefundRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.CancelPaymentAndRefundRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.CancelPaymentAndRefundRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Payment.CancelPaymentAndRefundRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No payment found with requested paymentId."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Gets a paged list of payments based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentRequest"
                  }
                ],
                "description": "Request model for the Payment report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentRequest"
                  }
                ],
                "description": "Request model for the Payment report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentRequest"
                  }
                ],
                "description": "Request model for the Payment report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentRequest"
                  }
                ],
                "description": "Request model for the Payment report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the payments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPaymentItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/paymentactivity": {
      "get": {
        "tags": [
          "PaymentActivity"
        ],
        "summary": "Retrieves paginated payment activity data based on search criteria with sorting capabilities",
        "description": "Required parameters by SearchType:\r\n- MemberID: MemberId\r\n- MemberIDAndDate: MemberId, StartDate, EndDate\r\n- MemberIDAndPayeeName: MemberId, PayeeName\r\n- MemberIDAndDateAndPayeeName: MemberId, StartDate, EndDate, PayeeName\r\n- Date: StartDate, EndDate (Note: there is no SearchType with value 4)\r\n- PaymentID: PaymentID\r\n- PayeeName: PayeeName\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_MemberID&MemberId=12345\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_MemberIDAndDate&MemberId=12345&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_MemberIDAndPayeeName&MemberId=12345&PayeeName=ACME\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_MemberIDAndDateAndPayeeName&MemberId=12345&StartDate=2023-01-01&EndDate=2023-12-31&PayeeName=ACME\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_Date&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_PaymentID&PaymentID=PAY123456\r\n    GET /api/v1/Report/PaymentActivity?SearchType=PaymentActivity_PayeeName&PayeeName=ACME\r\n\r\nSupported sort columns:\r\n- MemberID\r\n- PaymentID\r\n- PayeeName\r\n- DateProcessed (default)\r\n- DueDate\r\n- Status\r\n- PaymentMethod\r\n- Amount\r\n\r\nSort directions:\r\n- ASC (ascending)\r\n- DESC (descending, default)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "PaymentActivity_MemberID",
                "PaymentActivity_MemberIDAndDate",
                "PaymentActivity_MemberIDAndPayeeName",
                "PaymentActivity_MemberIDAndDateAndPayeeName",
                "PaymentActivity_Date",
                "PaymentActivity_PaymentID",
                "PaymentActivity_PayeeName"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/PaymentActivitySearchType"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date for date range searches",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date for date range searches",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MemberId",
            "in": "query",
            "description": "Member ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PaymentID",
            "in": "query",
            "description": "Payment ID to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayeeName",
            "in": "query",
            "description": "Payee name to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "MemberID",
                "PaymentID",
                "PayeeName",
                "DateProcessed",
                "DueDate",
                "Status",
                "PaymentMethod",
                "Amount"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/PaymentActivitySortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPaymentActivityItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/report/paymentclear": {
      "post": {
        "tags": [
          "PaymentClear"
        ],
        "summary": "Gets a paged list of payment clear records based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentClearRequest"
                  }
                ],
                "description": "Request model for the Payment Clear report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentClearRequest"
                  }
                ],
                "description": "Request model for the Payment Clear report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentClearRequest"
                  }
                ],
                "description": "Request model for the Payment Clear report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PaymentClearRequest"
                  }
                ],
                "description": "Request model for the Payment Clear report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the payment clear records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPaymentClearItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/paymenthistory/error-recap": {
      "post": {
        "tags": [
          "PaymentHistory"
        ],
        "summary": "Runs the report on ErrorRecap",
        "requestBody": {
          "description": "SearchType of Type \"ErrorHistorySearchType\"\r\n  Valid Values\r\n  0 -  PaymentId, 1 - MemberId, 2 - UserPayeeListId, 3 - StatusCode, 4 - Date, 5 - PayeeId, 6 - PayeeName",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.PaymentHistory.ErrorHistoryReportRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.PaymentHistory.ErrorHistoryReportRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.PaymentHistory.ErrorHistoryReportRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.PaymentHistory.ErrorHistoryReportRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.PaymentHistory.ErrorHistoryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.PaymentHistory.ErrorHistoryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.PaymentHistory.ErrorHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/paymenthistory/large-payment/{runDate}": {
      "get": {
        "tags": [
          "PaymentHistory"
        ],
        "summary": "Runs the report on ErrorRecap",
        "parameters": [
          {
            "name": "runDate",
            "in": "path",
            "description": "The runDate of the report",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.PaymentHistory.LargePaymentListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.PaymentHistory.LargePaymentListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.PaymentHistory.LargePaymentListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/paymenthistory": {
      "get": {
        "tags": [
          "PaymentHistory"
        ],
        "summary": "Gets a paged list of payment history records",
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "schema": {
              "enum": [
                "PaymentID",
                "RecurringPaymentID",
                "MemberID",
                "FundingAccount",
                "Amount",
                "PayeeID",
                "PayeeName",
                "UserPayeeListID",
                "UsersAccountAtPayee",
                "NameOnAccount",
                "ProcessDate",
                "DeliveryDate",
                "StatusCode",
                "StatusDescription",
                "Memo",
                "Source",
                "EntryDate",
                "LastUpdate",
                "CheckNumber",
                "ConfirmationNumber"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/PaymentHistorySortColumn"
                }
              ]
            }
          },
          {
            "name": "SearchType",
            "in": "query",
            "description": "Gets or sets the search type.",
            "required": true,
            "schema": {
              "enum": [
                "SingleDate",
                "MonthYear",
                "DateRange"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/PaymentHistorySearchType"
                }
              ]
            }
          },
          {
            "name": "SelectedSingleDate",
            "in": "query",
            "description": "Gets or sets the selected single date for filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MonthSelected",
            "in": "query",
            "description": "Gets or sets the selected month for filtering.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "YearSelected",
            "in": "query",
            "description": "Gets or sets the selected year for filtering.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SelectedStartDate",
            "in": "query",
            "description": "Gets or sets the start date for date range filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SelectedEndDate",
            "in": "query",
            "description": "Gets or sets the end date for date range filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPaymentHistoryItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPaymentHistoryItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPaymentHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/pendingpayments": {
      "post": {
        "tags": [
          "PendingPayments"
        ],
        "summary": "Gets a paged list of pending payments based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PendingPaymentsRequest"
                  }
                ],
                "description": "Request model for the Pending Payments report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PendingPaymentsRequest"
                  }
                ],
                "description": "Request model for the Pending Payments report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PendingPaymentsRequest"
                  }
                ],
                "description": "Request model for the Pending Payments report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.PendingPaymentsRequest"
                  }
                ],
                "description": "Request model for the Pending Payments report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the pending payments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfPendingPaymentsItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/processingconfirmation": {
      "get": {
        "tags": [
          "ProcessingConfirmation"
        ],
        "summary": "Retrieves paginated processing confirmation data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- DateRange: StartDate, EndDate\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/ProcessingConfirmation?SearchType=DateRange&StartDate=2023-01-01&EndDate=2023-12-31\r\n\r\nSupported sort columns: Start (default), End, Message\r\nSort directions: ASC (ascending, default), DESC (descending)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Type of search to perform",
            "required": true,
            "schema": {
              "enum": [
                "DateRange"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProcessingConfirmationSearchType"
                }
              ]
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to search from (required)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to search to (required)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "Column to sort by",
            "schema": {
              "enum": [
                "Start",
                "End",
                "Message"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProcessingConfirmationSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfProcessingConfirmationItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/report/recurringpayment": {
      "post": {
        "tags": [
          "RecurringPayment"
        ],
        "summary": "Gets a paged list of recurring payments based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the recurring payments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfRecurringPaymentItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/recurringpaymentchangehistory": {
      "post": {
        "tags": [
          "RecurringPaymentChangeHistory"
        ],
        "summary": "Gets a paged list of recurring payment change history records based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment Change History report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment Change History report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment Change History report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Recurring Payment Change History report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the recurring payment change history records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfRecurringPaymentChangeHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/run": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Runs the report on the specified request",
        "description": "",
        "requestBody": {
          "description": "The stored procedure string and the arguments to the procedure",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Report.ReportRunRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Report.ReportRunRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Report.ReportRunRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Report.ReportRunRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "Endpoint was not found."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/run/manual": {
      "post": {
        "tags": [
          "Run"
        ],
        "summary": "Creates and queues a new manual payment processing run",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Run.ManualRunCreateRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Run.ManualRunCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Run.ManualRunCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Run.ManualRunCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid process date."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/scheduledpaymentchangehistory": {
      "post": {
        "tags": [
          "ScheduledPaymentChangeHistory"
        ],
        "summary": "Gets a paged list of scheduled payment change history records based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.ScheduledPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Scheduled Payment Change History report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.ScheduledPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Scheduled Payment Change History report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.ScheduledPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Scheduled Payment Change History report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.ScheduledPaymentChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the Scheduled Payment Change History report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the scheduled payment change history records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfScheduledPaymentChangeHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/payment-history": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payment histories based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentHistorySearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentHistorySearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentHistorySearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payments based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/recurring-payment": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches recurring payments based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.RecurringPaymentSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.RecurringPaymentSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.RecurringPaymentSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/error-history": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches error histories based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.ErrorHistorySearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.ErrorHistorySearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.ErrorHistorySearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/user-payee-list": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches user payee lists based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.UserPayeeListSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.UserPayeeListSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.UserPayeeListSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment-clear": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payment clears based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentClearSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentClearSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentClearSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/nickname": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches nick names based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.NickNameSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.NickNameSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.NickNameSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payee": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payees based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.SearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PayeeSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PayeeSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PayeeSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment-information": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search Payments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.PaymentInformationSearchRequest"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.PaymentInformationSearchRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.PaymentInformationSearchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Requests.Search.PaymentInformationSearchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentInformationSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentInformationSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.Search.PaymentInformationSearchResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/settlementsummary": {
      "get": {
        "tags": [
          "SettlementSummary"
        ],
        "summary": "Gets a list of settlement summary items",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "description": "Gets or sets the search type.",
            "required": true,
            "schema": {
              "enum": [
                "SingleDate",
                "MonthYear",
                "Year",
                "DateRange"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SettlementSummarySearchType"
                }
              ]
            }
          },
          {
            "name": "SelectedSingleDate",
            "in": "query",
            "description": "Gets or sets the selected single date for filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MonthSelected",
            "in": "query",
            "description": "Gets or sets the selected month for filtering.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "YearSelected",
            "in": "query",
            "description": "Gets or sets the selected year for filtering.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SelectedStartDate",
            "in": "query",
            "description": "Gets or sets the start date for date range filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SelectedEndDate",
            "in": "query",
            "description": "Gets or sets the end date for date range filtering.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettlementSummaryItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettlementSummaryItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettlementSummaryItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statuscode/{code}": {
      "get": {
        "tags": [
          "StatusCode"
        ],
        "summary": "Returns a status code object of the given integer code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The integer code to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No status code found at the given integer code."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/statuscode/all": {
      "get": {
        "tags": [
          "StatusCode"
        ],
        "summary": "Returns a list of all status code objects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/statuseswithnotifications": {
      "get": {
        "tags": [
          "StatusesWithNotifications"
        ],
        "summary": "Gets a paged list of statuses with notifications based on the provided request parameters.",
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "description": "The column to sort by.",
            "required": true,
            "schema": {
              "enum": [
                "StatusCode",
                "StatusDescription",
                "StatusFriendlyName",
                "StatusHostCode",
                "NotificationId"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/StatusesWithNotificationsSortColumn"
                }
              ],
              "example": "StatusDescription"
            },
            "example": "StatusDescription"
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the statuses with notifications.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfStatusesWithNotificationsItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/suspendedpayment": {
      "get": {
        "tags": [
          "SuspendedPayment"
        ],
        "summary": "Gets a paged list of suspended payments.",
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "description": "The sort column for the suspended payment report.",
            "schema": {
              "enum": [
                "PaymentID",
                "RecurringID",
                "MemberID",
                "Account",
                "Amount",
                "PayeeID",
                "PayeeName",
                "UserPayeeListID",
                "UsersAccountAtPayee",
                "NameOnAccount",
                "ProcessDate",
                "DeliveryDate",
                "Comments",
                "Source",
                "EntryDate",
                "LastUpdated"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SuspendedPaymentSortColumn"
                }
              ]
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the suspended payments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfSuspendedPaymentItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/userpayee": {
      "post": {
        "tags": [
          "UserPayee"
        ],
        "summary": "Gets a paged list of user payees based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeRequest"
                  }
                ],
                "description": "Request model for the User Payee report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeRequest"
                  }
                ],
                "description": "Request model for the User Payee report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeRequest"
                  }
                ],
                "description": "Request model for the User Payee report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeRequest"
                  }
                ],
                "description": "Request model for the User Payee report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the user payees.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfUserPayeeItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/userpayeechangehistory": {
      "post": {
        "tags": [
          "UserPayeeChangeHistory"
        ],
        "summary": "Gets a paged list of user payee change history records based on the provided request parameters.",
        "requestBody": {
          "description": "The request parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the User Payee Change History report."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the User Payee Change History report."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the User Payee Change History report."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeChangeHistoryRequest"
                  }
                ],
                "description": "Request model for the User Payee Change History report."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the user payee change history records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfUserPayeeChangeHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "If an error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Gets versions of all Global services",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.CbpVersionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.CbpVersionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responses.CbpVersionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActiveUserCountItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "lastActivityDate": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "paymentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActiveUserCountSearchType": {
        "enum": [
          "DateRange"
        ],
        "type": "string",
        "description": "Defines the available search types for the Active User Count API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'DateRange'"
      },
      "ActiveUserCountSortColumn": {
        "enum": [
          "MemberID",
          "LastActivityDate",
          "FirstName",
          "LastName",
          "Email",
          "PaymentCount"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Active User Count API. Allowed values: 'MemberID', 'LastActivityDate', 'FirstName', 'LastName', 'Email', 'PaymentCount'"
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.LargePaymentRequest": {
        "required": [
          "runDate",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "runDate": {
            "type": "string",
            "description": "The run date to retrieve large payments for.",
            "format": "date-time",
            "example": "2025-03-25"
          },
          "sortColumn": {
            "enum": [
              "MemberID",
              "Amount",
              "PayeeName",
              "Status"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/LargePaymentSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'MemberID', 'Amount', 'PayeeName', 'Status'",
            "example": "MemberID"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Large Payment report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.PayeeRequest": {
        "required": [
          "days",
          "searchType",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "Member",
              "Payment",
              "RecurringPayment",
              "UserPayeeList",
              "Payee"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportSearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'Member', 'Payment', 'RecurringPayment', 'UserPayeeList', 'Payee'",
            "example": "Member"
          },
          "memberID": {
            "type": "string",
            "description": "The member ID to search for (when SearchType is Member).",
            "nullable": true,
            "example": "12345"
          },
          "paymentID": {
            "type": "string",
            "description": "The payment ID to search for (when SearchType is Payment).",
            "nullable": true,
            "example": "P12345"
          },
          "recurringPaymentID": {
            "type": "string",
            "description": "The recurring payment ID to search for (when SearchType is RecurringPayment).",
            "nullable": true,
            "example": "RP12345"
          },
          "userPayeeListID": {
            "type": "string",
            "description": "The user payee list ID to search for (when SearchType is UserPayeeList).",
            "nullable": true,
            "example": "UPL12345"
          },
          "payeeID": {
            "type": "string",
            "description": "The payee ID to search for (when SearchType is Payee).",
            "nullable": true,
            "example": "PAY12345"
          },
          "days": {
            "maximum": 3650,
            "minimum": 1,
            "type": "integer",
            "description": "The number of days to include in the search.",
            "format": "int32",
            "example": 30
          },
          "sortColumn": {
            "enum": [
              "PayeeName",
              "PayeeID",
              "Address",
              "City",
              "State"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/PayeeSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'PayeeName', 'PayeeID', 'Address', 'City', 'State'",
            "example": "PayeeName"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Payee report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.PaymentClearRequest": {
        "required": [
          "days",
          "searchType",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "Member",
              "Payment",
              "RecurringPayment",
              "UserPayeeList",
              "Payee"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportSearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'Member', 'Payment', 'RecurringPayment', 'UserPayeeList', 'Payee'",
            "example": "Member"
          },
          "memberID": {
            "type": "string",
            "description": "The member ID to search for (when SearchType is Member).",
            "nullable": true,
            "example": "12345"
          },
          "paymentID": {
            "type": "string",
            "description": "The payment ID to search for (when SearchType is Payment).",
            "nullable": true,
            "example": "P12345"
          },
          "recurringPaymentID": {
            "type": "string",
            "description": "The recurring payment ID to search for (when SearchType is RecurringPayment).",
            "nullable": true,
            "example": "RP12345"
          },
          "userPayeeListID": {
            "type": "string",
            "description": "The user payee list ID to search for (when SearchType is UserPayeeList).",
            "nullable": true,
            "example": "UPL12345"
          },
          "payeeID": {
            "type": "string",
            "description": "The payee ID to search for (when SearchType is Payee).",
            "nullable": true,
            "example": "PAY12345"
          },
          "days": {
            "maximum": 3650,
            "minimum": 1,
            "type": "integer",
            "description": "The number of days to include in the search.",
            "format": "int32",
            "example": 30
          },
          "sortColumn": {
            "enum": [
              "ClearedDate",
              "PaymentID",
              "MemberID",
              "Amount",
              "PayeeName"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentClearSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'ClearedDate', 'PaymentID', 'MemberID', 'Amount', 'PayeeName'",
            "example": "ClearedDate"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Payment Clear report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.PaymentRequest": {
        "required": [
          "days",
          "searchType",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "Member",
              "Payment",
              "RecurringPayment",
              "UserPayeeList",
              "Payee"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportSearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'Member', 'Payment', 'RecurringPayment', 'UserPayeeList', 'Payee'",
            "example": "Member"
          },
          "memberID": {
            "type": "string",
            "description": "The member ID to search for (when SearchType is Member).",
            "nullable": true,
            "example": "12345"
          },
          "paymentID": {
            "type": "string",
            "description": "The payment ID to search for (when SearchType is Payment).",
            "nullable": true,
            "example": "P12345"
          },
          "recurringPaymentID": {
            "type": "string",
            "description": "The recurring payment ID to search for (when SearchType is RecurringPayment).",
            "nullable": true,
            "example": "RP12345"
          },
          "userPayeeListID": {
            "type": "string",
            "description": "The user payee list ID to search for (when SearchType is UserPayeeList).",
            "nullable": true,
            "example": "UPL12345"
          },
          "payeeID": {
            "type": "string",
            "description": "The payee ID to search for (when SearchType is Payee).",
            "nullable": true,
            "example": "PAY12345"
          },
          "days": {
            "maximum": 3650,
            "minimum": 1,
            "type": "integer",
            "description": "The number of days to include in the search.",
            "format": "int32",
            "example": 30
          },
          "sortColumn": {
            "enum": [
              "DateProcessed",
              "PaymentID",
              "MemberID",
              "Amount",
              "PayeeName",
              "Status"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'DateProcessed', 'PaymentID', 'MemberID', 'Amount', 'PayeeName', 'Status'",
            "example": "DateProcessed"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Payment report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.PendingPaymentsRequest": {
        "required": [
          "date",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The date to retrieve pending payments for.",
            "format": "date-time",
            "example": "2025-03-25"
          },
          "sortColumn": {
            "enum": [
              "PaymentID",
              "RecurringID",
              "MemberID",
              "Amount",
              "PayeeName",
              "WillProcessDate",
              "DeliveryDate"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/PendingPaymentsSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'PaymentID', 'RecurringID', 'MemberID', 'Amount', 'PayeeName', 'WillProcessDate', 'DeliveryDate'",
            "example": "PaymentID"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Pending Payments report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentChangeHistoryRequest": {
        "required": [
          "endDate",
          "searchType",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The start date for the search range.",
            "format": "date-time",
            "example": "2025-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the search range.",
            "format": "date-time",
            "example": "2025-03-25"
          },
          "searchType": {
            "enum": [
              "MemberID",
              "RecurringPaymentID",
              "DateRange"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistorySearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'MemberID', 'RecurringPaymentID', 'DateRange'",
            "example": "MemberID"
          },
          "memberID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Member ID to search for when SearchType is MemberID.",
            "nullable": true,
            "example": "12345"
          },
          "recurringPaymentID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Recurring Payment ID to search for when SearchType is RecurringPaymentID.",
            "nullable": true,
            "example": "67890"
          },
          "sortColumn": {
            "enum": [
              "MemberID",
              "UpdatedBy",
              "UpdatedOn",
              "ChangeType",
              "RecurringPaymentId",
              "PayeeName",
              "Amount",
              "Frequency"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistorySortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'MemberID', 'UpdatedBy', 'UpdatedOn', 'ChangeType', 'RecurringPaymentId', 'PayeeName', 'Amount', 'Frequency'",
            "example": "UpdatedOn"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Recurring Payment Change History report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.RecurringPaymentRequest": {
        "required": [
          "days",
          "searchType",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "Member",
              "Payment",
              "RecurringPayment",
              "UserPayeeList",
              "Payee"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportSearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'Member', 'Payment', 'RecurringPayment', 'UserPayeeList', 'Payee'",
            "example": "Member"
          },
          "memberID": {
            "type": "string",
            "description": "The member ID to search for (when SearchType is Member).",
            "nullable": true,
            "example": "12345"
          },
          "paymentID": {
            "type": "string",
            "description": "The payment ID to search for (when SearchType is Payment).",
            "nullable": true,
            "example": "P12345"
          },
          "recurringPaymentID": {
            "type": "string",
            "description": "The recurring payment ID to search for (when SearchType is RecurringPayment).",
            "nullable": true,
            "example": "RP12345"
          },
          "userPayeeListID": {
            "type": "string",
            "description": "The user payee list ID to search for (when SearchType is UserPayeeList).",
            "nullable": true,
            "example": "UPL12345"
          },
          "payeeID": {
            "type": "string",
            "description": "The payee ID to search for (when SearchType is Payee).",
            "nullable": true,
            "example": "PAY12345"
          },
          "days": {
            "maximum": 3650,
            "minimum": 1,
            "type": "integer",
            "description": "The number of days to include in the search.",
            "format": "int32",
            "example": 30
          },
          "sortColumn": {
            "enum": [
              "NextPaymentDate",
              "RecurringPaymentID",
              "MemberID",
              "Amount",
              "PayeeName",
              "Frequency"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'NextPaymentDate', 'RecurringPaymentID', 'MemberID', 'Amount', 'PayeeName', 'Frequency'",
            "example": "NextPaymentDate"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Recurring Payment report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.ScheduledPaymentChangeHistoryRequest": {
        "required": [
          "endDate",
          "searchType",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The start date for the search range.",
            "format": "date-time",
            "example": "2025-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the search range.",
            "format": "date-time",
            "example": "2025-03-25"
          },
          "searchType": {
            "enum": [
              "MemberID",
              "PaymentID",
              "PayeeID"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistorySearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'MemberID', 'PaymentID', 'PayeeID'",
            "example": "MemberID"
          },
          "memberID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Member ID to search for when SearchType is MemberID.",
            "nullable": true,
            "example": "12345"
          },
          "paymentID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Payment ID to search for when SearchType is PaymentID.",
            "nullable": true,
            "example": "67890"
          },
          "payeeID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Payee ID to search for when SearchType is PayeeID.",
            "nullable": true,
            "example": "54321"
          },
          "sortColumn": {
            "enum": [
              "MemberID",
              "UpdatedBy",
              "UpdatedOn",
              "ChangeType",
              "PaymentId",
              "PayeeName",
              "Amount",
              "WillProcessDate",
              "Status"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistorySortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'MemberID', 'UpdatedBy', 'UpdatedOn', 'ChangeType', 'PaymentId', 'PayeeName', 'Amount', 'WillProcessDate', 'Status'",
            "example": "UpdatedOn"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the Scheduled Payment Change History report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeChangeHistoryRequest": {
        "required": [
          "endDate",
          "searchType",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The start date for the search range.",
            "format": "date-time",
            "example": "2025-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the search range.",
            "format": "date-time",
            "example": "2025-03-25"
          },
          "searchType": {
            "enum": [
              "MemberID",
              "UserPayeeListID"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserPayeeChangeHistorySearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'MemberID', 'UserPayeeListID'",
            "example": "MemberID"
          },
          "memberID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Member ID to search for when SearchType is MemberID.",
            "nullable": true,
            "example": "12345"
          },
          "userPayeeListID": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The User Payee List ID to search for when SearchType is UserPayeeListID.",
            "nullable": true,
            "example": "67890"
          },
          "sortColumn": {
            "enum": [
              "MemberID",
              "UserPayeeListId",
              "UpdatedBy",
              "UpdatedOn",
              "ChangeType",
              "PayeeId",
              "PayeeName",
              "PaymentMethod",
              "Active"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserPayeeChangeHistorySortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'MemberID', 'UserPayeeListId', 'UpdatedBy', 'UpdatedOn', 'ChangeType', 'PayeeId', 'PayeeName', 'PaymentMethod', 'Active'",
            "example": "UpdatedOn"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the User Payee Change History report."
      },
      "ConnectBillPay.AdminCuApi.Requests.Report.UserPayeeRequest": {
        "required": [
          "days",
          "searchType",
          "sortColumn"
        ],
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "Member",
              "Payment",
              "RecurringPayment",
              "UserPayeeList",
              "Payee"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportSearchType"
              }
            ],
            "description": "The type of search to perform.. Allowed values: 'Member', 'Payment', 'RecurringPayment', 'UserPayeeList', 'Payee'",
            "example": "Member"
          },
          "memberID": {
            "type": "string",
            "description": "The member ID to search for (when SearchType is Member).",
            "nullable": true,
            "example": "12345"
          },
          "paymentID": {
            "type": "string",
            "description": "The payment ID to search for (when SearchType is Payment).",
            "nullable": true,
            "example": "P12345"
          },
          "recurringPaymentID": {
            "type": "string",
            "description": "The recurring payment ID to search for (when SearchType is RecurringPayment).",
            "nullable": true,
            "example": "RP12345"
          },
          "userPayeeListID": {
            "type": "string",
            "description": "The user payee list ID to search for (when SearchType is UserPayeeList).",
            "nullable": true,
            "example": "UPL12345"
          },
          "payeeID": {
            "type": "string",
            "description": "The payee ID to search for (when SearchType is Payee).",
            "nullable": true,
            "example": "PAY12345"
          },
          "days": {
            "maximum": 3650,
            "minimum": 1,
            "type": "integer",
            "description": "The number of days to include in the search.",
            "format": "int32",
            "example": 30
          },
          "sortColumn": {
            "enum": [
              "PayeeName",
              "MemberID",
              "UserPayeeListID",
              "AccountNumber",
              "NickName",
              "PayeeType",
              "City",
              "State",
              "MemberName",
              "PayeeID",
              "EntryDate",
              "LastUpdated"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserPayeeSortColumn"
              }
            ],
            "description": "The column to sort by.. Allowed values: 'PayeeName', 'MemberID', 'UserPayeeListID', 'AccountNumber', 'NickName', 'PayeeType', 'City', 'State', 'MemberName', 'PayeeID', 'EntryDate', 'LastUpdated'",
            "example": "PayeeName"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "sortDirection": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ],
            "description": "Sort direction. Allowed values: 'ASC', 'DESC'"
          }
        },
        "additionalProperties": false,
        "description": "Request model for the User Payee report."
      },
      "ConnectBillPay.AdminCuApi.Responses.ApiErrorResponse": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Core.Classes.ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Core.Classes.ServiceResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Requests.InstitutionInfoCreateRequest": {
        "type": "object",
        "properties": {
          "afterHoursContactFirstName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactLastName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactPhone": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "primaryHours": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Requests.InstitutionInfoUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "afterHoursContactFirstName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactLastName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactPhone": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "primaryHours": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Responses.InstitutionInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "primaryHours": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactPhone": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactFirstName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactLastName": {
            "type": "string",
            "nullable": true
          },
          "settlementAccountType": {
            "type": "string",
            "nullable": true
          },
          "settlementGlCode": {
            "type": "string",
            "nullable": true
          },
          "settlementAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "settlementExternalAch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Responses.NotificationListResponse": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectBillPay.Responses.NotificationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Responses.NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "errorNumber": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchMode": {
            "type": "integer",
            "format": "int32"
          },
          "matchOrder": {
            "type": "integer",
            "format": "int32"
          },
          "matchText": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "emailMember": {
            "type": "boolean"
          },
          "emailMemberServices": {
            "type": "boolean"
          },
          "emailSysOp": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "symmetry": {
            "type": "boolean"
          },
          "emerge": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Responses.SavedNotificationListResponse": {
        "type": "object",
        "properties": {
          "savedNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectBillPay.Responses.SavedNotificationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectBillPay.Responses.SavedNotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusCodeDescription": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "sent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ErrorHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "runId": {
            "type": "integer",
            "format": "int32"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time"
          },
          "errorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistorySearchType": {
        "enum": [
          "PaymentId",
          "MemberId",
          "UserPayeeListId",
          "StatusCode",
          "Date",
          "PayeeId",
          "PayeeName"
        ],
        "type": "string",
        "description": "ErrorHistorySearchType. Allowed values: 'PaymentId', 'MemberId', 'UserPayeeListId', 'StatusCode', 'Date', 'PayeeId', 'PayeeName'"
      },
      "ErrorRecapItem": {
        "type": "object",
        "properties": {
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "hostCode": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorRecapSearchType": {
        "enum": [
          "PaymentID",
          "MemberID",
          "UserPayeeListID",
          "StatusCode",
          "DateRange",
          "PayeeID",
          "PayeeName"
        ],
        "type": "string",
        "description": "Defines the available search types for the Error Recap API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'PaymentID', 'MemberID', 'UserPayeeListID', 'StatusCode', 'DateRange', 'PayeeID', 'PayeeName'"
      },
      "ErrorRecapSortColumn": {
        "enum": [
          "FailedDate",
          "MemberID",
          "PaymentID",
          "Amount",
          "UserPayeeListID",
          "PayeeID",
          "PayeeName",
          "Status"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Error Recap API. Allowed values: 'FailedDate', 'MemberID', 'PaymentID', 'Amount', 'UserPayeeListID', 'PayeeID', 'PayeeName', 'Status'"
      },
      "FailedOnUsItem": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "fundingAccount": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "processedDate": {
            "type": "string",
            "nullable": true
          },
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FailedOnUsSearchType": {
        "enum": [
          "DateRange",
          "PaymentID",
          "MemberID",
          "UserPayeeListID",
          "StatusCode",
          "PayeeID",
          "PayeeName"
        ],
        "type": "string",
        "description": "Defines the available search types for the Failed On-Us API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'DateRange', 'PaymentID', 'MemberID', 'UserPayeeListID', 'StatusCode', 'PayeeID', 'PayeeName'"
      },
      "FailedOnUsSortColumn": {
        "enum": [
          "FailedDate",
          "ProcessedDate",
          "MemberID",
          "PaymentID",
          "Amount",
          "UserPayeeListID",
          "PayeeID",
          "PayeeName",
          "Status",
          "StatusCode"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Failed On-Us API. Allowed values: 'FailedDate', 'ProcessedDate', 'MemberID', 'PaymentID', 'Amount', 'UserPayeeListID', 'PayeeID', 'PayeeName', 'Status', 'StatusCode'"
      },
      "GlobalHolidaysItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "holidayType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalHolidaysSearchType": {
        "enum": [
          "All"
        ],
        "type": "string",
        "description": "Defines the available search types for the Global Holidays API.. Allowed values: 'All'"
      },
      "GlobalHolidaysSortColumn": {
        "enum": [
          "Date",
          "Id",
          "Description",
          "HolidayType"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Global Holidays API. Allowed values: 'Date', 'Id', 'Description', 'HolidayType'"
      },
      "LargePaymentItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LargePaymentSortColumn": {
        "enum": [
          "MemberID",
          "Amount",
          "PayeeName",
          "Status"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Large Payment API.. Allowed values: 'MemberID', 'Amount', 'PayeeName', 'Status'"
      },
      "MonthlyUsersItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "numberOfPayments": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MonthlyUsersSearchType": {
        "enum": [
          "DateRange"
        ],
        "type": "string",
        "description": "Defines the available search types for the Monthly Users API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'DateRange'"
      },
      "MonthlyUsersSortColumn": {
        "enum": [
          "MemberID",
          "NumberOfPayments"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Monthly Users API. Allowed values: 'MemberID', 'NumberOfPayments'"
      },
      "NickNameSearchReport": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OFACExceptionsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sponsorTransactionId": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "sponsorName": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerFirstName": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerLastName": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "customerAddress1": {
            "type": "string",
            "nullable": true
          },
          "customerAddress2": {
            "type": "string",
            "nullable": true
          },
          "customerCity": {
            "type": "string",
            "nullable": true
          },
          "customerState": {
            "type": "string",
            "nullable": true
          },
          "customerZip": {
            "type": "string",
            "nullable": true
          },
          "customerCountry": {
            "type": "string",
            "nullable": true
          },
          "internalPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "payeeAddress1": {
            "type": "string",
            "nullable": true
          },
          "payeeAddress2": {
            "type": "string",
            "nullable": true
          },
          "payeeCity": {
            "type": "string",
            "nullable": true
          },
          "payeeState": {
            "type": "string",
            "nullable": true
          },
          "payeeZip": {
            "type": "string",
            "nullable": true
          },
          "payeeCountry": {
            "type": "string",
            "nullable": true
          },
          "customerPayeeId": {
            "type": "string",
            "nullable": true
          },
          "customerPayeeAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "confirmationNumber": {
            "type": "string",
            "nullable": true
          },
          "transactionAmount": {
            "type": "number",
            "format": "double"
          },
          "memoLineInfo": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestNumber": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serviceRequestType": {
            "type": "string",
            "nullable": true
          },
          "problemCauseType": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "nullable": true
          },
          "deliverByDate": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OFACExceptionsSearchType": {
        "enum": [
          "SingleDate",
          "MonthYear",
          "DateRange",
          "All"
        ],
        "type": "string",
        "description": "Enum for the search types in the OFAC Exceptions report.. Allowed values: 'SingleDate', 'MonthYear', 'DateRange', 'All'"
      },
      "OFACExceptionsSortColumn": {
        "enum": [
          "SponsorTransactionId",
          "SponsorId",
          "SponsorName",
          "CustomerId",
          "PrimaryCustomerFirstName",
          "PrimaryCustomerLastName",
          "BusinessName",
          "PayeeName",
          "ConfirmationNumber",
          "TransactionAmount",
          "ServiceRequestNumber",
          "ServiceRequestDate",
          "CheckNumber",
          "Created"
        ],
        "type": "string",
        "description": "Enum for the sortable columns in the OFAC Exceptions report.. Allowed values: 'SponsorTransactionId', 'SponsorId', 'SponsorName', 'CustomerId', 'PrimaryCustomerFirstName', 'PrimaryCustomerLastName', 'BusinessName', 'PayeeName', 'ConfirmationNumber', 'TransactionAmount', 'ServiceRequestNumber', 'ServiceRequestDate', 'CheckNumber', 'Created'"
      },
      "OnUsPostingsItem": {
        "type": "object",
        "properties": {
          "seqNo": {
            "type": "string",
            "nullable": true
          },
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "accountID": {
            "type": "string",
            "nullable": true
          },
          "loanID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "glCode": {
            "type": "string",
            "nullable": true
          },
          "runID": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "errorDesc": {
            "type": "string",
            "nullable": true
          },
          "sourceApp": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "changeReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnUsPostingsSearchType": {
        "enum": [
          "DateRange",
          "PaymentID",
          "MemberID",
          "AccountID",
          "LoanID",
          "RunID"
        ],
        "type": "string",
        "description": "Defines the available search types for the On-Us Postings API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'DateRange', 'PaymentID', 'MemberID', 'AccountID', 'LoanID', 'RunID'"
      },
      "OnUsPostingsSortColumn": {
        "enum": [
          "PaymentID",
          "MemberID",
          "EntryDate",
          "ModifiedDate",
          "Amount",
          "AccountID",
          "LoanID",
          "ErrorCode",
          "RunID"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the On-Us Postings API. Allowed values: 'PaymentID', 'MemberID', 'EntryDate', 'ModifiedDate', 'Amount', 'AccountID', 'LoanID', 'ErrorCode', 'RunID'"
      },
      "PagedResponseOfActiveUserCountItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActiveUserCountItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfErrorRecapItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorRecapItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfFailedOnUsItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FailedOnUsItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfGlobalHolidaysItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalHolidaysItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfLargePaymentItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LargePaymentItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfMonthlyUsersItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyUsersItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfOFACExceptionsItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OFACExceptionsItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfOnUsPostingsItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnUsPostingsItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfPayeeItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayeeItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfPaymentActivityItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentActivityItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfPaymentClearItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentClearItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfPaymentHistoryItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistoryItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfPaymentItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfPendingPaymentsItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingPaymentsItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfProcessingConfirmationItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingConfirmationItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfRecurringPaymentChangeHistoryItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPaymentChangeHistoryItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfRecurringPaymentItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPaymentItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfScheduledPaymentChangeHistoryItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledPaymentChangeHistoryItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfStatusesWithNotificationsItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusesWithNotificationsItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfSuspendedPaymentItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuspendedPaymentItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfUserPayeeChangeHistoryItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeChangeHistoryItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponseOfUserPayeeItem": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Payee": {
        "type": "object",
        "properties": {
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeItem": {
        "type": "object",
        "properties": {
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeSearchReport": {
        "type": "object",
        "properties": {
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeSortColumn": {
        "enum": [
          "PayeeName",
          "PayeeID",
          "Address",
          "City",
          "State"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Payee report.. Allowed values: 'PayeeName', 'PayeeID', 'Address', 'City', 'State'"
      },
      "PaymentActivityItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentActivitySearchType": {
        "enum": [
          "PaymentActivity_MemberID",
          "PaymentActivity_MemberIDAndDate",
          "PaymentActivity_MemberIDAndPayeeName",
          "PaymentActivity_MemberIDAndDateAndPayeeName",
          "PaymentActivity_Date",
          "PaymentActivity_PaymentID",
          "PaymentActivity_PayeeName"
        ],
        "type": "string",
        "description": "Defines the available search types for the Payment Activity API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'PaymentActivity_MemberID', 'PaymentActivity_MemberIDAndDate', 'PaymentActivity_MemberIDAndPayeeName', 'PaymentActivity_MemberIDAndDateAndPayeeName', 'PaymentActivity_Date', 'PaymentActivity_PaymentID', 'PaymentActivity_PayeeName'"
      },
      "PaymentActivitySortColumn": {
        "enum": [
          "MemberID",
          "PaymentID",
          "PayeeName",
          "DateProcessed",
          "DueDate",
          "Status",
          "PaymentMethod",
          "Amount"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Payment Activity API. Allowed values: 'MemberID', 'PaymentID', 'PayeeName', 'DateProcessed', 'DueDate', 'Status', 'PaymentMethod', 'Amount'"
      },
      "PaymentClearItem": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "clearedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentClearSearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "clearedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastAction": {
            "type": "string",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentClearSortColumn": {
        "enum": [
          "ClearedDate",
          "PaymentID",
          "MemberID",
          "Amount",
          "PayeeName"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Payment Clear report.. Allowed values: 'ClearedDate', 'PaymentID', 'MemberID', 'Amount', 'PayeeName'"
      },
      "PaymentHistoryItem": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "recurringID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "fundingAccount": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListID": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "processDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "confirmationNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentHistorySearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "failedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "accountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberMiddleName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "memberAddress1": {
            "type": "string",
            "nullable": true
          },
          "memberAddress2": {
            "type": "string",
            "nullable": true
          },
          "memberCity": {
            "type": "string",
            "nullable": true
          },
          "memberState": {
            "type": "string",
            "nullable": true
          },
          "memberZipCode": {
            "type": "string",
            "nullable": true
          },
          "memberCountry": {
            "type": "string",
            "nullable": true
          },
          "memberHomePhone": {
            "type": "string",
            "nullable": true
          },
          "memberWorkPhone": {
            "type": "string",
            "nullable": true
          },
          "memberWorkPhoneExt": {
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentHistorySearchType": {
        "enum": [
          "SingleDate",
          "MonthYear",
          "DateRange"
        ],
        "type": "string",
        "description": "Enum for the search types in the Payment History report.. Allowed values: 'SingleDate', 'MonthYear', 'DateRange'"
      },
      "PaymentHistorySortColumn": {
        "enum": [
          "PaymentID",
          "RecurringPaymentID",
          "MemberID",
          "FundingAccount",
          "Amount",
          "PayeeID",
          "PayeeName",
          "UserPayeeListID",
          "UsersAccountAtPayee",
          "NameOnAccount",
          "ProcessDate",
          "DeliveryDate",
          "StatusCode",
          "StatusDescription",
          "Memo",
          "Source",
          "EntryDate",
          "LastUpdate",
          "CheckNumber",
          "ConfirmationNumber"
        ],
        "type": "string",
        "description": "Enum for the sortable columns in the Payment History report.. Allowed values: 'PaymentID', 'RecurringPaymentID', 'MemberID', 'FundingAccount', 'Amount', 'PayeeID', 'PayeeName', 'UserPayeeListID', 'UsersAccountAtPayee', 'NameOnAccount', 'ProcessDate', 'DeliveryDate', 'StatusCode', 'StatusDescription', 'Memo', 'Source', 'EntryDate', 'LastUpdate', 'CheckNumber', 'ConfirmationNumber'"
      },
      "PaymentInformationReport": {
        "type": "object",
        "properties": {
          "sponsorName": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "checkClearedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolutionType": {
            "type": "string",
            "nullable": true
          },
          "problemCauseType": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentItem": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentSearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentSortColumn": {
        "enum": [
          "DateProcessed",
          "PaymentID",
          "MemberID",
          "Amount",
          "PayeeName",
          "Status"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Payment report.. Allowed values: 'DateProcessed', 'PaymentID', 'MemberID', 'Amount', 'PayeeName', 'Status'"
      },
      "PendingPaymentsItem": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "recurringID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "payeeListID": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "nullable": true
          },
          "suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PendingPaymentsSortColumn": {
        "enum": [
          "PaymentID",
          "RecurringID",
          "MemberID",
          "Amount",
          "PayeeName",
          "WillProcessDate",
          "DeliveryDate"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Pending Payments API.. Allowed values: 'PaymentID', 'RecurringID', 'MemberID', 'Amount', 'PayeeName', 'WillProcessDate', 'DeliveryDate'"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProcessingConfirmationItem": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessingConfirmationSearchType": {
        "enum": [
          "DateRange"
        ],
        "type": "string",
        "description": "Defines the available search types for the Processing Confirmation API.\r\nEach search type requires specific parameters to be provided in the request.. Allowed values: 'DateRange'"
      },
      "ProcessingConfirmationSortColumn": {
        "enum": [
          "Start",
          "End",
          "Message"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Processing Confirmation API. Allowed values: 'Start', 'End', 'Message'"
      },
      "RecurringPaymentChangeHistoryItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "lastProcessedDate": {
            "type": "string",
            "nullable": true
          },
          "nextProcessDate": {
            "type": "string",
            "nullable": true
          },
          "nextDueDate": {
            "type": "string",
            "nullable": true
          },
          "numberOfPayments": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecurringPaymentChangeHistorySearchType": {
        "enum": [
          "MemberID",
          "RecurringPaymentID",
          "DateRange"
        ],
        "type": "string",
        "description": "Defines the available search types for the Recurring Payment Change History API.. Allowed values: 'MemberID', 'RecurringPaymentID', 'DateRange'"
      },
      "RecurringPaymentChangeHistorySortColumn": {
        "enum": [
          "MemberID",
          "UpdatedBy",
          "UpdatedOn",
          "ChangeType",
          "RecurringPaymentId",
          "PayeeName",
          "Amount",
          "Frequency"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Recurring Payment Change History API.. Allowed values: 'MemberID', 'UpdatedBy', 'UpdatedOn', 'ChangeType', 'RecurringPaymentId', 'PayeeName', 'Amount', 'Frequency'"
      },
      "RecurringPaymentItem": {
        "type": "object",
        "properties": {
          "recurringPaymentID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecurringPaymentSearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "initialAmount": {
            "type": "integer",
            "format": "int32"
          },
          "finalAmount": {
            "type": "integer",
            "format": "int32"
          },
          "lastProcessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "initialDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processDay": {
            "type": "string",
            "nullable": true
          },
          "numberOfPayments": {
            "type": "integer",
            "format": "int32"
          },
          "paymentsProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RecurringPaymentSortColumn": {
        "enum": [
          "NextPaymentDate",
          "RecurringPaymentID",
          "MemberID",
          "Amount",
          "PayeeName",
          "Frequency"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Recurring Payment report.. Allowed values: 'NextPaymentDate', 'RecurringPaymentID', 'MemberID', 'Amount', 'PayeeName', 'Frequency'"
      },
      "ReportSearchType": {
        "enum": [
          "Member",
          "Payment",
          "RecurringPayment",
          "UserPayeeList",
          "Payee"
        ],
        "type": "string",
        "description": "Defines the available search types for report requests.. Allowed values: 'Member', 'Payment', 'RecurringPayment', 'UserPayeeList', 'Payee'"
      },
      "Requests.Calendar.HolidayCreateRequest": {
        "type": "object",
        "properties": {
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Calendar.HolidayUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Configuration.ConfigurationCreateRequest": {
        "type": "object",
        "properties": {
          "configName": {
            "type": "string",
            "nullable": true
          },
          "configValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "creditUnionAccess": {
            "type": "string",
            "nullable": true
          },
          "connectSupportAccess": {
            "type": "string",
            "nullable": true
          },
          "connectManagerAccess": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Configuration.ConfigurationUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "configName": {
            "type": "string",
            "nullable": true
          },
          "configValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "creditUnionAccess": {
            "type": "string",
            "nullable": true
          },
          "connectSupportAccess": {
            "type": "string",
            "nullable": true
          },
          "connectManagerAccess": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Contact.ContactCreateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Contact.ContactUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Customer.CustomerCreateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleInitial": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "workPhone": {
            "type": "string",
            "nullable": true
          },
          "workPhoneExt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Exception.ExceptionRefundRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.NotificationCreateRequest": {
        "type": "object",
        "properties": {
          "errorNumber": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchMode": {
            "type": "integer",
            "format": "int32"
          },
          "matchOrder": {
            "type": "integer",
            "format": "int32"
          },
          "matchText": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "emailMember": {
            "type": "boolean"
          },
          "emailMemberServices": {
            "type": "boolean"
          },
          "emailSysOp": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "symmetry": {
            "type": "boolean"
          },
          "emerge": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.NotificationSendCustomerRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.NotificationSendRequest": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.NotificationSendSupportRequest": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "tokens": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.NotificationUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "errorNumber": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchMode": {
            "type": "integer",
            "format": "int32"
          },
          "matchOrder": {
            "type": "integer",
            "format": "int32"
          },
          "matchText": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "emailMember": {
            "type": "boolean"
          },
          "emailMemberServices": {
            "type": "boolean"
          },
          "emailSysOp": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "symmetry": {
            "type": "boolean",
            "nullable": true
          },
          "emerge": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.SavedNotificationClearRequest": {
        "type": "object",
        "properties": {
          "clearUpToDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Requests.Notification.SavedNotificationSearchRequest": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SavedNotificationSearchParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.OnUs.FailedOnUsRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.OnUs.OnUsPaymentRefundAndCancelRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.OnUs.OnUsPaymentRepostRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "nullable": true
          },
          "markPaymentPaid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.CopyMemberPayeesRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "newMemberId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.GlobalPayeeChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchType": {
            "enum": [
              "UserPayeeListId",
              "MemberId",
              "PaymentId",
              "PayeeId",
              "RecurringPaymentId",
              "MemberIdAndDate",
              "MemberIdAndPayeeName",
              "MemberIdAndDateAndPayeeName",
              "Date",
              "PayeeName",
              "FisPayeeId"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchType"
              }
            ],
            "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.ManualUpdateRequest": {
        "type": "object",
        "properties": {
          "fisExceptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "manualDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.PayeeCloseGlobalRequest": {
        "type": "object",
        "properties": {
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.UpdateAccountAndReprocessRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.UpdateFisPayeeIdAndRefundRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.UserPayeeChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "enum": [
              "UserPayeeListId",
              "MemberId",
              "PaymentId",
              "PayeeId",
              "RecurringPaymentId",
              "MemberIdAndDate",
              "MemberIdAndPayeeName",
              "MemberIdAndDateAndPayeeName",
              "Date",
              "PayeeName",
              "FisPayeeId"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchType"
              }
            ],
            "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.UserPayeeUpdateAccountNumberRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payee.UserPayeeUpdateFisPayeeIdRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.CancelPaymentAndRefundRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.PaymentActivityRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "enum": [
              "UserPayeeListId",
              "MemberId",
              "PaymentId",
              "PayeeId",
              "RecurringPaymentId",
              "MemberIdAndDate",
              "MemberIdAndPayeeName",
              "MemberIdAndDateAndPayeeName",
              "Date",
              "PayeeName",
              "FisPayeeId"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchType"
              }
            ],
            "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.PaymentEditRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "numPayments": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.PaymentReprocessRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.PaymentUpdateStatusRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.PendingPaymentSearchRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.PendingPaymentsRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "checkHoliday": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.RecurringPaymentChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "enum": [
              "UserPayeeListId",
              "MemberId",
              "PaymentId",
              "PayeeId",
              "RecurringPaymentId",
              "MemberIdAndDate",
              "MemberIdAndPayeeName",
              "MemberIdAndDateAndPayeeName",
              "Date",
              "PayeeName",
              "FisPayeeId"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchType"
              }
            ],
            "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Payment.ScheduledPaymentChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "enum": [
              "UserPayeeListId",
              "MemberId",
              "PaymentId",
              "PayeeId",
              "RecurringPaymentId",
              "MemberIdAndDate",
              "MemberIdAndPayeeName",
              "MemberIdAndDateAndPayeeName",
              "Date",
              "PayeeName",
              "FisPayeeId"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchType"
              }
            ],
            "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.PaymentHistory.ErrorHistoryReportRequest": {
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "PaymentId",
              "MemberId",
              "UserPayeeListId",
              "StatusCode",
              "Date",
              "PayeeId",
              "PayeeName"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorHistorySearchType"
              }
            ],
            "description": "ErrorHistorySearchType. Allowed values: 'PaymentId', 'MemberId', 'UserPayeeListId', 'StatusCode', 'Date', 'PayeeId', 'PayeeName'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Report.ReportRunRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Run.ManualRunCreateRequest": {
        "type": "object",
        "properties": {
          "processDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reprocessOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Requests.Search.PaymentInformationSearchRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sponsorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "statusCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "resolutionTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "problemCauseTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Requests.Search.SearchRequest": {
        "type": "object",
        "properties": {
          "searchType": {
            "enum": [
              "UserPayeeListId",
              "MemberId",
              "PaymentId",
              "PayeeId",
              "RecurringPaymentId",
              "MemberIdAndDate",
              "MemberIdAndPayeeName",
              "MemberIdAndDateAndPayeeName",
              "Date",
              "PayeeName",
              "FisPayeeId"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchType"
              }
            ],
            "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Calendar.HolidayListResponse": {
        "type": "object",
        "properties": {
          "holidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.Calendar.HolidayResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Calendar.HolidayResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.CbpVersionResponse": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "adminCuApi": {
            "type": "string",
            "nullable": true
          },
          "incomingFiles": {
            "type": "string",
            "nullable": true
          },
          "paymentProcessing": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Configuration.ConfigurationListResponse": {
        "type": "object",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.Configuration.ConfigurationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Configuration.ConfigurationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "configName": {
            "type": "string",
            "nullable": true
          },
          "configValue": {
            "type": "string",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "creditUnionAccess": {
            "type": "string",
            "nullable": true
          },
          "connectSupportAccess": {
            "type": "string",
            "nullable": true
          },
          "connectManagerAccess": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Contact.ContactListResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.Contact.ContactResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Contact.ContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Responses.Customer.CustomerCreateResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Exception.ExceptionRefundResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "adjustment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Responses.Exception.PaymentExceptionAdjustmentResponse"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Exception.PaymentExceptionAdjustmentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "paymentExceptionId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentHistoryId": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Exception.PaymentExceptionListResponse": {
        "type": "object",
        "properties": {
          "paymentExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.Exception.PaymentExceptionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Exception.PaymentExceptionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recordType": {
            "type": "string",
            "nullable": true
          },
          "sponsorTransactionId": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "sponsorName": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customerChangeIndicator": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerFirstName": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerLastName": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerSsn": {
            "type": "string",
            "nullable": true
          },
          "secondaryCustomerFirstName": {
            "type": "string",
            "nullable": true
          },
          "secondaryCustomerLastName": {
            "type": "string",
            "nullable": true
          },
          "secondaryCustomerSsn": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "federalTaxId": {
            "type": "string",
            "nullable": true
          },
          "customerAddress1": {
            "type": "string",
            "nullable": true
          },
          "customerAddress2": {
            "type": "string",
            "nullable": true
          },
          "customerCity": {
            "type": "string",
            "nullable": true
          },
          "customerState": {
            "type": "string",
            "nullable": true
          },
          "customerZip": {
            "type": "string",
            "nullable": true
          },
          "customerCountry": {
            "type": "string",
            "nullable": true
          },
          "customerTelephone": {
            "type": "string",
            "nullable": true
          },
          "internalPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeChangeIndicator": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "payeeAttentionLine": {
            "type": "string",
            "nullable": true
          },
          "payeeTelephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "payeeAddress1": {
            "type": "string",
            "nullable": true
          },
          "payeeAddress2": {
            "type": "string",
            "nullable": true
          },
          "payeeCity": {
            "type": "string",
            "nullable": true
          },
          "payeeState": {
            "type": "string",
            "nullable": true
          },
          "payeeZip": {
            "type": "string",
            "nullable": true
          },
          "payeeCountry": {
            "type": "string",
            "nullable": true
          },
          "payeeNickname": {
            "type": "string",
            "nullable": true
          },
          "customerPayeeId": {
            "type": "string",
            "nullable": true
          },
          "customerPayeeAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "confirmationNumber": {
            "type": "string",
            "nullable": true
          },
          "transactionAmount": {
            "type": "string",
            "nullable": true
          },
          "memoLineInfo": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestNumber": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestDate": {
            "type": "string",
            "format": "date-time"
          },
          "serviceRequestTime": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestType": {
            "type": "string",
            "nullable": true
          },
          "problemCauseType": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "nullable": true
          },
          "deliverByDate": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Responses.OnUs.FailedOnUsListResponse": {
        "type": "object",
        "properties": {
          "failedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.OnUs.FailedOnUsResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.OnUs.FailedOnUsResponse": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "fundingAccount": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "processedDate": {
            "type": "string",
            "nullable": true
          },
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Payee.GlobalPayeeChangeHistoryListResponse": {
        "type": "object",
        "properties": {
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.Payee.GlobalPayeeChangeHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Payee.GlobalPayeeChangeHistoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recordType": {
            "type": "string",
            "nullable": true
          },
          "internalPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberMiddleName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "attentionLine": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "payeeStatus": {
            "type": "string",
            "nullable": true
          },
          "disbursementType": {
            "type": "string",
            "nullable": true
          },
          "payeeLevelType": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "electronicLeadTime": {
            "type": "string",
            "nullable": true
          },
          "checkLeadTime": {
            "type": "string",
            "nullable": true
          },
          "ofacstatus": {
            "type": "string",
            "nullable": true
          },
          "closeReason": {
            "type": "string",
            "nullable": true
          },
          "fileCreatorCutoffTime": {
            "type": "string",
            "nullable": true
          },
          "industryCode": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "insertDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Responses.Payee.UserPayeeChangeHistoryListResponse": {
        "type": "object",
        "properties": {
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.Payee.UserPayeeChangeHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Payee.UserPayeeChangeHistoryResponse": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Payee.UserPayeeListResponse": {
        "type": "object",
        "properties": {
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.PaymentHistory.ErrorHistoryListResponse": {
        "type": "object",
        "properties": {
          "errorHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.PaymentHistory.ErrorHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.PaymentHistory.ErrorHistoryResponse": {
        "type": "object",
        "properties": {
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "hostCode": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.PaymentHistory.LargePaymentListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.PaymentHistory.LargePaymentResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.PaymentHistory.LargePaymentResponse": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.ErrorHistorySearchListResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.NickNameSearchListResponse": {
        "type": "object",
        "properties": {
          "nickNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NickNameSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.PayeeSearchListResponse": {
        "type": "object",
        "properties": {
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayeeSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.PaymentClearSearchListResponse": {
        "type": "object",
        "properties": {
          "paymentClears": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentClearSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.PaymentHistorySearchListResponse": {
        "type": "object",
        "properties": {
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistorySearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.PaymentInformationSearchResponse": {
        "type": "object",
        "properties": {
          "paymentInformationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInformationReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.PaymentSearchListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.RecurringPaymentSearchListResponse": {
        "type": "object",
        "properties": {
          "recurringPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPaymentSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.Search.UserPayeeListSearchListResponse": {
        "type": "object",
        "properties": {
          "userPayeeLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.StatusCode.StatusCodeListResponse": {
        "type": "object",
        "properties": {
          "statusCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responses.StatusCode.StatusCodeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Responses.StatusCode.StatusCodeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "hostCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationSearchParameter": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "DateRange",
              "MemberId",
              "PaymentId",
              "PaymentDate",
              "MemberEmail"
            ],
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SavedNotificationSearchParameterType"
              }
            ],
            "description": "SavedNotificationSearchParameterType. Allowed values: 'DateRange', 'MemberId', 'PaymentId', 'PaymentDate', 'MemberEmail'"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "value2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationSearchParameterType": {
        "enum": [
          "DateRange",
          "MemberId",
          "PaymentId",
          "PaymentDate",
          "MemberEmail"
        ],
        "type": "string",
        "description": "SavedNotificationSearchParameterType. Allowed values: 'DateRange', 'MemberId', 'PaymentId', 'PaymentDate', 'MemberEmail'"
      },
      "ScheduledPaymentChangeHistoryItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "willProcessDate": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduledPaymentChangeHistorySearchType": {
        "enum": [
          "MemberID",
          "PaymentID",
          "PayeeID"
        ],
        "type": "string",
        "description": "Defines the available search types for the Scheduled Payment Change History API.. Allowed values: 'MemberID', 'PaymentID', 'PayeeID'"
      },
      "ScheduledPaymentChangeHistorySortColumn": {
        "enum": [
          "MemberID",
          "UpdatedBy",
          "UpdatedOn",
          "ChangeType",
          "PaymentId",
          "PayeeName",
          "Amount",
          "WillProcessDate",
          "Status"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Scheduled Payment Change History API.. Allowed values: 'MemberID', 'UpdatedBy', 'UpdatedOn', 'ChangeType', 'PaymentId', 'PayeeName', 'Amount', 'WillProcessDate', 'Status'"
      },
      "SearchType": {
        "enum": [
          "UserPayeeListId",
          "MemberId",
          "PaymentId",
          "PayeeId",
          "RecurringPaymentId",
          "MemberIdAndDate",
          "MemberIdAndPayeeName",
          "MemberIdAndDateAndPayeeName",
          "Date",
          "PayeeName",
          "FisPayeeId"
        ],
        "type": "string",
        "description": "SearchType. Allowed values: 'UserPayeeListId', 'MemberId', 'PaymentId', 'PayeeId', 'RecurringPaymentId', 'MemberIdAndDate', 'MemberIdAndPayeeName', 'MemberIdAndDateAndPayeeName', 'Date', 'PayeeName', 'FisPayeeId'"
      },
      "SettlementSummaryItem": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SettlementSummarySearchType": {
        "enum": [
          "SingleDate",
          "MonthYear",
          "Year",
          "DateRange"
        ],
        "type": "string",
        "description": "Enum for the search types in the Settlement Summary report.. Allowed values: 'SingleDate', 'MonthYear', 'Year', 'DateRange'"
      },
      "SortDirection": {
        "enum": [
          "ASC",
          "DESC"
        ],
        "type": "string",
        "description": "Defines the available sort directions for API requests. Allowed values: 'ASC', 'DESC'"
      },
      "StatusesWithNotificationsItem": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          },
          "statusFriendlyName": {
            "type": "string",
            "nullable": true
          },
          "statusHostCode": {
            "type": "string",
            "nullable": true
          },
          "notificationId": {
            "type": "string",
            "nullable": true
          },
          "notificationErrorNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationMatchMode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationMatchOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationMatchText": {
            "type": "string",
            "nullable": true
          },
          "notificationMessageSubject": {
            "type": "string",
            "nullable": true
          },
          "notificationMessageBody": {
            "type": "string",
            "nullable": true
          },
          "notificationEmailMember": {
            "type": "boolean",
            "nullable": true
          },
          "notificationEmailMemberServices": {
            "type": "boolean",
            "nullable": true
          },
          "notificationEmailSysOp": {
            "type": "boolean",
            "nullable": true
          },
          "notificationNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusesWithNotificationsSortColumn": {
        "enum": [
          "StatusCode",
          "StatusDescription",
          "StatusFriendlyName",
          "StatusHostCode",
          "NotificationId"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the Statuses With Notifications API.. Allowed values: 'StatusCode', 'StatusDescription', 'StatusFriendlyName', 'StatusHostCode', 'NotificationId'"
      },
      "SuspendedPaymentItem": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "recurringID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListID": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "processDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SuspendedPaymentSortColumn": {
        "enum": [
          "PaymentID",
          "RecurringID",
          "MemberID",
          "Account",
          "Amount",
          "PayeeID",
          "PayeeName",
          "UserPayeeListID",
          "UsersAccountAtPayee",
          "NameOnAccount",
          "ProcessDate",
          "DeliveryDate",
          "Comments",
          "Source",
          "EntryDate",
          "LastUpdated"
        ],
        "type": "string",
        "description": "Enum for the sort columns in the Suspended Payment report.. Allowed values: 'PaymentID', 'RecurringID', 'MemberID', 'Account', 'Amount', 'PayeeID', 'PayeeName', 'UserPayeeListID', 'UsersAccountAtPayee', 'NameOnAccount', 'ProcessDate', 'DeliveryDate', 'Comments', 'Source', 'EntryDate', 'LastUpdated'"
      },
      "UpdateAccountAndRefund": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserPayeeChangeHistoryItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeChangeHistorySearchType": {
        "enum": [
          "MemberID",
          "UserPayeeListID"
        ],
        "type": "string",
        "description": "Defines the available search types for the User Payee Change History API.. Allowed values: 'MemberID', 'UserPayeeListID'"
      },
      "UserPayeeChangeHistorySortColumn": {
        "enum": [
          "MemberID",
          "UserPayeeListId",
          "UpdatedBy",
          "UpdatedOn",
          "ChangeType",
          "PayeeId",
          "PayeeName",
          "PaymentMethod",
          "Active"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the User Payee Change History API.. Allowed values: 'MemberID', 'UserPayeeListId', 'UpdatedBy', 'UpdatedOn', 'ChangeType', 'PayeeId', 'PayeeName', 'PaymentMethod', 'Active'"
      },
      "UserPayeeData": {
        "type": "object",
        "properties": {
          "payee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Payee"
              }
            ],
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "attentionLine": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "favorite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserPayeeItem": {
        "type": "object",
        "properties": {
          "userPayeeListID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "attentionLine": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "favorite": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "updated": {
            "type": "boolean",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeSortColumn": {
        "enum": [
          "PayeeName",
          "MemberID",
          "UserPayeeListID",
          "AccountNumber",
          "NickName",
          "PayeeType",
          "City",
          "State",
          "MemberName",
          "PayeeID",
          "EntryDate",
          "LastUpdated"
        ],
        "type": "string",
        "description": "Defines the available sort columns for the User Payee report.. Allowed values: 'PayeeName', 'MemberID', 'UserPayeeListID', 'AccountNumber', 'NickName', 'PayeeType', 'City', 'State', 'MemberName', 'PayeeID', 'EntryDate', 'LastUpdated'"
      }
    }
  }
}