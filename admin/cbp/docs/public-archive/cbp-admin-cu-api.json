{
  "openapi": "3.0.1",
  "info": {
    "title": "ConnectBillPay.AdminCuApi",
    "version": "v1"
  },
  "paths": {
    "/api/v1/calendar/holiday": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Adds a new holiday",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "409": {
            "description": "The requested holiday conflicts with an existing holday (same date)."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Edits an existing credit union holiday",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested holiday could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/calendar/holiday/{holidayId}": {
      "delete": {
        "tags": [
          "Calendar"
        ],
        "summary": "Deletes a holiday",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The id of the holiday to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested holiday could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Gets an existing credit union holiday",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The id of the holiday to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested holiday could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/calendar/holiday/all/{sponsorId}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Gets all credit union holidays",
        "parameters": [
          {
            "name": "sponsorId",
            "in": "path",
            "description": "The credit union sponsor id (0 for global only)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/configuration": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Creates a configuration entry in the configuration table",
        "requestBody": {
          "description": "configuration to be added to configuration table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Configuration already exists with the given ConfigName"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "summary": "Creates a configuration entry in the configuration table",
        "requestBody": {
          "description": "configuration to be updated",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Could not fine config to update"
          },
          "409": {
            "description": "Configuration already exists with the given ConfigName"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/configuration/{id}": {
      "delete": {
        "tags": [
          "Configuration"
        ],
        "summary": "Deletes a configuration entry with the given config name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A configuration at the given name was not found."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Brings back a configuration entry from the configuration table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of configuration be looked for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          },
          "400": {
            "description": "config was null"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/configuration/all": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Brings back a all configurations  from the configuration table",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/configuration/refresh": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Refreshes stored configuration settings",
        "responses": {
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Creates a contact entry in the Contact table",
        "requestBody": {
          "description": "contact to be added to Contact table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Contact already exists"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Edits a record in the Contact table",
        "requestBody": {
          "description": "The updated contact record data with the record Id",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Request Id is invalid."
          },
          "404": {
            "description": "Unable to find contact record with the given request Id."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/contact/{id}": {
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes a contact entry in the Contact table as the given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the contact to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Unable to find a contact at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/contact/all": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Brings back a list of all contacts from the Contact table",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Creates a customer entry in the Customer table",
        "requestBody": {
          "description": "customer to be added to Customer table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreateResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/report/errorrecap": {
      "get": {
        "tags": [
          "ErrorRecap"
        ],
        "summary": "Retrieves paginated error recap data based on search criteria",
        "description": "Required parameters by SearchType:\r\n- PaymentID (0): PaymentID\r\n- MemberID (1): MemberID\r\n- UserPayeeListID (2): UserPayeeListID\r\n- StatusCode (3): StatusCode\r\n- DateRange (4): StartDate, EndDate\r\n- PayeeID (5): PayeeID\r\n- PayeeName (6): PayeeName\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/ErrorRecap?SearchType=0&PaymentID=PAY123456\r\n    GET /api/v1/Report/ErrorRecap?SearchType=1&MemberID=12345\r\n    GET /api/v1/Report/ErrorRecap?SearchType=2&UserPayeeListID=UPL789\r\n    GET /api/v1/Report/ErrorRecap?SearchType=3&StatusCode=ERROR123\r\n    GET /api/v1/Report/ErrorRecap?SearchType=4&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/ErrorRecap?SearchType=5&PayeeID=P456\r\n    GET /api/v1/Report/ErrorRecap?SearchType=6&PayeeName=ACME\r\n\r\nSupported sort columns: FailedDate (default), MemberID, PaymentID, Amount, UserPayeeListID, PayeeID, PayeeName, Status\r\nSort directions: ASC (ascending), DESC (descending, default)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ErrorRecapSearchType"
            }
          },
          {
            "name": "PaymentID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MemberID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserPayeeListID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PayeeID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayeeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ErrorRecapSortColumn"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRecapItemPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRecapItemPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorRecapItemPagedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/exception/{date}": {
      "get": {
        "tags": [
          "Exception"
        ],
        "summary": "Gets exceptions for a given date",
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "The date of the exceptions",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentExceptionListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentExceptionListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentExceptionListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/exception/refund": {
      "post": {
        "tags": [
          "Exception"
        ],
        "summary": "Refunds a Payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExceptionRefundRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExceptionRefundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExceptionRefundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExceptionRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRefundResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRefundResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/institutioninfo": {
      "post": {
        "tags": [
          "InstitutionInfo"
        ],
        "summary": "Creates an institution information entry in the InstitutionInfo table / only one is allowed",
        "requestBody": {
          "description": "institution information to be added to InstitutionInfo table",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Institution Info already exists"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "get": {
        "tags": [
          "InstitutionInfo"
        ],
        "summary": "Brings back the institutionInfo record if it exists",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionInfoResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionInfoResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "No institutionInfo record exists"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      },
      "put": {
        "tags": [
          "InstitutionInfo"
        ],
        "summary": "Edits an record within the InstitutionInfo table.",
        "requestBody": {
          "description": "The updated institution information keyed by the request Id.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstitutionInfoUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The request Id in invalid."
          },
          "404": {
            "description": "An institution info record was not found at the request Id."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/saved/clear": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Clears all saved notifications up to a given date",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationClearRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationClearRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationClearRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationClearRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Adds a new notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "The requested notification conflicts with an existing notification (same status code or error code).",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Edits an existing notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/{notificationId}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Deletes a notification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The id of the notification to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Gets an existing notification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The id of the notification to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "The requested notification could not be found"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/all": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Gets all notifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/configured": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Gets configured notifications for symmetry or Emerge",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/search": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Searched saved notifications",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SavedNotificationSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SavedNotificationListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedNotificationListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedNotificationListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/notification/send/customer": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Sends a Notification to the customer",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendCustomerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendCustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendCustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Sends a Notification based on status code",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A bad exceptionId or PaymentId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/notification/send/support": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Sends a support notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendSupportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendSupportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendSupportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSendSupportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/payment/{id}": {
      "get": {
        "tags": [
          "OnUs"
        ],
        "summary": "Gets an OnUsPayment by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the OnUsPayment to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No OnUsPayment resource found at the given ID."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/payment/repost": {
      "put": {
        "tags": [
          "OnUs"
        ],
        "summary": "Reposts an OnUsPayment with updated values",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRepostRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRepostRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRepostRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRepostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "No OnUsPayment resource found at the given ID."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/payment/refund": {
      "put": {
        "tags": [
          "OnUs"
        ],
        "summary": "Refunds an OnUsPayment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRefundAndCancelRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRefundAndCancelRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRefundAndCancelRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OnUsPaymentRefundAndCancelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "No OnUsPayment resource found at the given ID."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/onus/failed-on-us": {
      "post": {
        "tags": [
          "OnUs"
        ],
        "summary": "Runs the report on FailedOnUs",
        "requestBody": {
          "description": "The request parameters of the report",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FailedOnUsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailedOnUsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FailedOnUsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FailedOnUsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FailedOnUsListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedOnUsListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailedOnUsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/global/close": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Closed an FIS global payee",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeCloseGlobalRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeCloseGlobalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeCloseGlobalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeCloseGlobalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "404": {
            "description": "No global payee found at the given FisPayeeId"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payee/copy-payees": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Creates a new UserPayeeList entry with the old data and the new memberid",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyMemberPayeesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyMemberPayeesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyMemberPayeesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyMemberPayeesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/change-history": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Runs the report on user payee change histories",
        "requestBody": {
          "description": "The request parameters of the report",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeChangeHistoryReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeChangeHistoryReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeChangeHistoryReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeChangeHistoryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeChangeHistoryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeChangeHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/global/change-history": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Runs the report on global payee change histories",
        "requestBody": {
          "description": "The request parameters of the report",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPayeeChangeHistoryReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPayeeChangeHistoryReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPayeeChangeHistoryReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPayeeChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPayeeChangeHistoryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPayeeChangeHistoryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPayeeChangeHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/account-number": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateAccountNumberRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateAccountNumberRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateAccountNumberRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateAccountNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/account-number-reprocess": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList and resubmits the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndReprocessRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndReprocessRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndReprocessRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndReprocessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/account-number-refund": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the UsersAccountAtPayee for a UserPayeeList and resubmits the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndRefund"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndRefund"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndRefund"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountAndRefund"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/fis-payee-id": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the FisPayeeId for a UserPayeeList",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateFisPayeeIdRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateFisPayeeIdRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateFisPayeeIdRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPayeeUpdateFisPayeeIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/user/fis-payee-refund": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Updates the FisPayeeId for a UserPayeeList and refunds the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFisPayeeIdAndRefundRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFisPayeeIdAndRefundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFisPayeeIdAndRefundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFisPayeeIdAndRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/manual-exception-reprocess": {
      "post": {
        "tags": [
          "Payee"
        ],
        "summary": "Performs a manual update on exception and refunds the payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "A user payee was not found at the given ID"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payee/member/{memberId}": {
      "get": {
        "tags": [
          "Payee"
        ],
        "summary": "Get a list of payees for a member",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "The member ID to get payees for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of payees (may be empty)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/change-history": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns scheduled payment change history within the given start and end date with a matching search value",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistoryReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistoryReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistoryReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledPaymentChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/recurring/change-history": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns recurring payment change history within the given start and end date with a matching search value",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistoryReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistoryReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistoryReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentChangeHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/pending": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns pending payments on the given search date as well as other payments in the same batch",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/pending-payments": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns pending payments on the given search date as well as other payments in the same batch",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PendingPaymentSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/activity": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns payment activity as specified in the request",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentActivityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentActivityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentActivityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/reprocess": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Queues a payment for reprocessing",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReprocessRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReprocessRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReprocessRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReprocessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A payment could not be found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/confirmation": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Sends the payment confirmation notification to CU",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payment/status": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Updates the status of a payment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateStatusRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request received"
          },
          "404": {
            "description": "A payment could not be found at the given ID"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/payment/{paymentId}": {
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Edit's a payment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment to edit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Account              - The account that is funding the payment\r\nMemberId             - The payer's member Id\r\nAmount               - The account funding the payment\r\nWillProcessDate      - The date the payment will process\r\nFrequency            - Frequency for Recurring Payments\r\nNumPayments          - NumPayments for Recurring Payments",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentEditRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentEditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentEditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No resource found at the given memberId and paymentId."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Cancels a payment based on id",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No payment found with requested paymentId."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/payment/cancel-payment-refund": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Cancels a payment based on paymentId and refunds based on exceptionId",
        "requestBody": {
          "description": "PaymentId              - The Connect Bill Pay PaymentId\r\nExceptionId            - The ExceptionId from Fis",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentAndRefundRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentAndRefundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentAndRefundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentAndRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No payment found with requested paymentId."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/paymentactivity": {
      "get": {
        "tags": [
          "PaymentActivity"
        ],
        "summary": "Retrieves paginated payment activity data based on search criteria with sorting capabilities",
        "description": "Required parameters by SearchType:\r\n- MemberID (0): MemberId\r\n- MemberIDAndDate (1): MemberId, StartDate, EndDate\r\n- MemberIDAndPayeeName (2): MemberId, PayeeName\r\n- MemberIDAndDateAndPayeeName (3): MemberId, StartDate, EndDate, PayeeName\r\n- Date (5): StartDate, EndDate (Note: there is no SearchType with value 4)\r\n- PaymentID (6): PaymentID\r\n- PayeeName (7): PayeeName\r\n\r\nExample requests:\r\n\r\n    GET /api/v1/Report/PaymentActivity?SearchType=0&MemberId=12345\r\n    GET /api/v1/Report/PaymentActivity?SearchType=1&MemberId=12345&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/PaymentActivity?SearchType=2&MemberId=12345&PayeeName=ACME\r\n    GET /api/v1/Report/PaymentActivity?SearchType=3&MemberId=12345&StartDate=2023-01-01&EndDate=2023-12-31&PayeeName=ACME\r\n    GET /api/v1/Report/PaymentActivity?SearchType=5&StartDate=2023-01-01&EndDate=2023-12-31\r\n    GET /api/v1/Report/PaymentActivity?SearchType=6&PaymentID=PAY123456\r\n    GET /api/v1/Report/PaymentActivity?SearchType=7&PayeeName=ACME\r\n\r\nSupported sort columns:\r\n- MemberID\r\n- PaymentID\r\n- PayeeName\r\n- DateProcessed (default)\r\n- DueDate\r\n- Status\r\n- PaymentMethod\r\n- Amount\r\n\r\nSort directions:\r\n- ASC (ascending)\r\n- DESC (descending, default)",
        "parameters": [
          {
            "name": "SearchType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentActivitySearchType"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MemberId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PaymentID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayeeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaymentActivitySortColumn"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentActivityItemPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentActivityItemPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentActivityItemPagedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/paymenthistory/error-recap": {
      "post": {
        "tags": [
          "PaymentHistory"
        ],
        "summary": "Runs the report on ErrorRecap",
        "requestBody": {
          "description": "SearchType of Type \"ErrorHistorySearchType\"\r\n  Valid Values\r\n  0 -  PaymentId, 1 - MemberId, 2 - UserPayeeListId, 3 - StatusCode, 4 - Date, 5 - PayeeId, 6 - PayeeName",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorHistoryReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorHistoryReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorHistoryReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorHistoryReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistoryListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistoryListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/paymenthistory/large-payment/{runDate}": {
      "get": {
        "tags": [
          "PaymentHistory"
        ],
        "summary": "Runs the report on ErrorRecap",
        "parameters": [
          {
            "name": "runDate",
            "in": "path",
            "description": "The runDate of the report",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LargePaymentListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LargePaymentListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LargePaymentListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/report/run": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Runs the report on the specified request",
        "description": "",
        "requestBody": {
          "description": "The stored procedure string and the arguments to the procedure",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRunRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRunRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRunRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request syntax."
          },
          "404": {
            "description": "Endpoint was not found."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/run/manual": {
      "post": {
        "tags": [
          "Run"
        ],
        "summary": "Creates and queues a new manual payment processing run",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ManualRunCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualRunCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualRunCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManualRunCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid process date."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment-history": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payment histories based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistorySearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistorySearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistorySearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payments based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/recurring-payment": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches recurring payments based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/error-history": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches error histories based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistorySearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistorySearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorHistorySearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/user-payee-list": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches user payee lists based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeListSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeListSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPayeeListSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment-clear": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payment clears based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentClearSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentClearSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentClearSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/nickname": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches nick names based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NickNameSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NickNameSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NickNameSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payee": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Searches payees based on the given search type and value",
        "requestBody": {
          "description": "SearchType           - The type of value to search on\r\nSearchValue          - The value to search for",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeSearchListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeSearchListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeSearchListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/search/payment-information": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search Payments",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInformationSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInformationSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInformationSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInformationSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformationSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformationSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInformationSearchResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/statuscode/{code}": {
      "get": {
        "tags": [
          "StatusCode"
        ],
        "summary": "Returns a status code object of the given integer code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The integer code to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request received."
          },
          "404": {
            "description": "No status code found at the given integer code."
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/statuscode/all": {
      "get": {
        "tags": [
          "StatusCode"
        ],
        "summary": "Returns a list of all status code objects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusCodeListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong."
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Gets versions of all Global services",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CbpVersionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CbpVersionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CbpVersionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CancelPaymentAndRefundRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CbpVersionResponse": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string",
            "nullable": true
          },
          "adminCuApi": {
            "type": "string",
            "nullable": true
          },
          "incomingFiles": {
            "type": "string",
            "nullable": true
          },
          "paymentProcessing": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationCreateRequest": {
        "type": "object",
        "properties": {
          "configName": {
            "type": "string",
            "nullable": true
          },
          "configValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "creditUnionAccess": {
            "type": "string",
            "nullable": true
          },
          "connectSupportAccess": {
            "type": "string",
            "nullable": true
          },
          "connectManagerAccess": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationListResponse": {
        "type": "object",
        "properties": {
          "configurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigurationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "configName": {
            "type": "string",
            "nullable": true
          },
          "configValue": {
            "type": "string",
            "nullable": true
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "creditUnionAccess": {
            "type": "string",
            "nullable": true
          },
          "connectSupportAccess": {
            "type": "string",
            "nullable": true
          },
          "connectManagerAccess": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "configName": {
            "type": "string",
            "nullable": true
          },
          "configValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "creditUnionAccess": {
            "type": "string",
            "nullable": true
          },
          "connectSupportAccess": {
            "type": "string",
            "nullable": true
          },
          "connectManagerAccess": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactCreateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactListResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ContactUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyMemberPayeesRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "newMemberId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerCreateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleInitial": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "workPhone": {
            "type": "string",
            "nullable": true
          },
          "workPhoneExt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerCreateResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "runId": {
            "type": "integer",
            "format": "int32"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time"
          },
          "errorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistoryListResponse": {
        "type": "object",
        "properties": {
          "errorHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistoryReportRequest": {
        "type": "object",
        "properties": {
          "searchType": {
            "$ref": "#/components/schemas/ErrorHistorySearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistoryResponse": {
        "type": "object",
        "properties": {
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "hostCode": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistorySearchListResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorHistorySearchType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ErrorRecapItem": {
        "type": "object",
        "properties": {
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "hostCode": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorRecapItemPagedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorRecapItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorRecapSearchType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ErrorRecapSortColumn": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExceptionRefundRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ExceptionRefundResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "adjustment": {
            "$ref": "#/components/schemas/PaymentExceptionAdjustmentResponse"
          }
        },
        "additionalProperties": false
      },
      "FailedOnUsListResponse": {
        "type": "object",
        "properties": {
          "failedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FailedOnUsResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FailedOnUsRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FailedOnUsResponse": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "fundingAccount": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "processedDate": {
            "type": "string",
            "nullable": true
          },
          "failedDate": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalPayeeChangeHistoryListResponse": {
        "type": "object",
        "properties": {
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalPayeeChangeHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalPayeeChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchType": {
            "$ref": "#/components/schemas/SearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalPayeeChangeHistoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recordType": {
            "type": "string",
            "nullable": true
          },
          "internalPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberMiddleName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "attentionLine": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "payeeStatus": {
            "type": "string",
            "nullable": true
          },
          "disbursementType": {
            "type": "string",
            "nullable": true
          },
          "payeeLevelType": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "electronicLeadTime": {
            "type": "string",
            "nullable": true
          },
          "checkLeadTime": {
            "type": "string",
            "nullable": true
          },
          "ofacstatus": {
            "type": "string",
            "nullable": true
          },
          "closeReason": {
            "type": "string",
            "nullable": true
          },
          "fileCreatorCutoffTime": {
            "type": "string",
            "nullable": true
          },
          "industryCode": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "insertDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "HolidayCreateRequest": {
        "type": "object",
        "properties": {
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HolidayListResponse": {
        "type": "object",
        "properties": {
          "holidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HolidayResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HolidayResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HolidayUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstitutionInfoCreateRequest": {
        "type": "object",
        "properties": {
          "afterHoursContactFirstName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactLastName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactPhone": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "primaryHours": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstitutionInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "primaryHours": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactPhone": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactFirstName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactLastName": {
            "type": "string",
            "nullable": true
          },
          "settlementAccountType": {
            "type": "string",
            "nullable": true
          },
          "settlementGlCode": {
            "type": "string",
            "nullable": true
          },
          "settlementAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "settlementExternalAch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstitutionInfoUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "afterHoursContactFirstName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactLastName": {
            "type": "string",
            "nullable": true
          },
          "afterHoursContactPhone": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "primaryHours": {
            "type": "string",
            "nullable": true
          },
          "routingNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LargePaymentListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LargePaymentResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LargePaymentResponse": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManualRunCreateRequest": {
        "type": "object",
        "properties": {
          "processDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reprocessOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ManualUpdateRequest": {
        "type": "object",
        "properties": {
          "fisExceptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "manualDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NickNameSearchListResponse": {
        "type": "object",
        "properties": {
          "nickNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NickNameSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NickNameSearchReport": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationCreateRequest": {
        "type": "object",
        "properties": {
          "errorNumber": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchMode": {
            "type": "integer",
            "format": "int32"
          },
          "matchOrder": {
            "type": "integer",
            "format": "int32"
          },
          "matchText": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "emailMember": {
            "type": "boolean"
          },
          "emailMemberServices": {
            "type": "boolean"
          },
          "emailSysOp": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "symmetry": {
            "type": "boolean"
          },
          "emerge": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NotificationListResponse": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "errorNumber": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchMode": {
            "type": "integer",
            "format": "int32"
          },
          "matchOrder": {
            "type": "integer",
            "format": "int32"
          },
          "matchText": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "emailMember": {
            "type": "boolean"
          },
          "emailMemberServices": {
            "type": "boolean"
          },
          "emailSysOp": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "symmetry": {
            "type": "boolean"
          },
          "emerge": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NotificationSendCustomerRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationSendRequest": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationSendSupportRequest": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "tokens": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "errorNumber": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchMode": {
            "type": "integer",
            "format": "int32"
          },
          "matchOrder": {
            "type": "integer",
            "format": "int32"
          },
          "matchText": {
            "type": "string",
            "nullable": true
          },
          "messageSubject": {
            "type": "string",
            "nullable": true
          },
          "messageBody": {
            "type": "string",
            "nullable": true
          },
          "emailMember": {
            "type": "boolean"
          },
          "emailMemberServices": {
            "type": "boolean"
          },
          "emailSysOp": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "symmetry": {
            "type": "boolean",
            "nullable": true
          },
          "emerge": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnUsPaymentRefundAndCancelRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OnUsPaymentRepostRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "loanId": {
            "type": "string",
            "nullable": true
          },
          "markPaymentPaid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Payee": {
        "type": "object",
        "properties": {
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeCloseGlobalRequest": {
        "type": "object",
        "properties": {
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeSearchListResponse": {
        "type": "object",
        "properties": {
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayeeSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeSearchReport": {
        "type": "object",
        "properties": {
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentActivityItem": {
        "type": "object",
        "properties": {
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "paymentID": {
            "type": "string",
            "nullable": true
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentActivityItemPagedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentActivityItem"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentActivityRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "$ref": "#/components/schemas/SearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentActivitySearchType": {
        "enum": [
          0,
          1,
          2,
          3,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentActivitySortColumn": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentClearSearchListResponse": {
        "type": "object",
        "properties": {
          "paymentClears": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentClearSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentClearSearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "clearedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastAction": {
            "type": "string",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentEditRequest": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "numPayments": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentExceptionAdjustmentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "paymentExceptionId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentHistoryId": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentExceptionListResponse": {
        "type": "object",
        "properties": {
          "paymentExceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentExceptionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentExceptionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recordType": {
            "type": "string",
            "nullable": true
          },
          "sponsorTransactionId": {
            "type": "string",
            "nullable": true
          },
          "sponsorId": {
            "type": "string",
            "nullable": true
          },
          "sponsorName": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customerChangeIndicator": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerFirstName": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerLastName": {
            "type": "string",
            "nullable": true
          },
          "primaryCustomerSsn": {
            "type": "string",
            "nullable": true
          },
          "secondaryCustomerFirstName": {
            "type": "string",
            "nullable": true
          },
          "secondaryCustomerLastName": {
            "type": "string",
            "nullable": true
          },
          "secondaryCustomerSsn": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "federalTaxId": {
            "type": "string",
            "nullable": true
          },
          "customerAddress1": {
            "type": "string",
            "nullable": true
          },
          "customerAddress2": {
            "type": "string",
            "nullable": true
          },
          "customerCity": {
            "type": "string",
            "nullable": true
          },
          "customerState": {
            "type": "string",
            "nullable": true
          },
          "customerZip": {
            "type": "string",
            "nullable": true
          },
          "customerCountry": {
            "type": "string",
            "nullable": true
          },
          "customerTelephone": {
            "type": "string",
            "nullable": true
          },
          "internalPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeChangeIndicator": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "payeeAttentionLine": {
            "type": "string",
            "nullable": true
          },
          "payeeTelephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "payeeAddress1": {
            "type": "string",
            "nullable": true
          },
          "payeeAddress2": {
            "type": "string",
            "nullable": true
          },
          "payeeCity": {
            "type": "string",
            "nullable": true
          },
          "payeeState": {
            "type": "string",
            "nullable": true
          },
          "payeeZip": {
            "type": "string",
            "nullable": true
          },
          "payeeCountry": {
            "type": "string",
            "nullable": true
          },
          "payeeNickname": {
            "type": "string",
            "nullable": true
          },
          "customerPayeeId": {
            "type": "string",
            "nullable": true
          },
          "customerPayeeAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "confirmationNumber": {
            "type": "string",
            "nullable": true
          },
          "transactionAmount": {
            "type": "string",
            "nullable": true
          },
          "memoLineInfo": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestNumber": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestDate": {
            "type": "string",
            "format": "date-time"
          },
          "serviceRequestTime": {
            "type": "string",
            "nullable": true
          },
          "serviceRequestType": {
            "type": "string",
            "nullable": true
          },
          "problemCauseType": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "nullable": true
          },
          "deliverByDate": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PaymentHistorySearchListResponse": {
        "type": "object",
        "properties": {
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistorySearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentHistorySearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "failedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeID": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "accountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          },
          "memberFirstName": {
            "type": "string",
            "nullable": true
          },
          "memberMiddleName": {
            "type": "string",
            "nullable": true
          },
          "memberLastName": {
            "type": "string",
            "nullable": true
          },
          "memberAddress1": {
            "type": "string",
            "nullable": true
          },
          "memberAddress2": {
            "type": "string",
            "nullable": true
          },
          "memberCity": {
            "type": "string",
            "nullable": true
          },
          "memberState": {
            "type": "string",
            "nullable": true
          },
          "memberZipCode": {
            "type": "string",
            "nullable": true
          },
          "memberCountry": {
            "type": "string",
            "nullable": true
          },
          "memberHomePhone": {
            "type": "string",
            "nullable": true
          },
          "memberWorkPhone": {
            "type": "string",
            "nullable": true
          },
          "memberWorkPhoneExt": {
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInformationReport": {
        "type": "object",
        "properties": {
          "sponsorName": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "checkClearedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolutionType": {
            "type": "string",
            "nullable": true
          },
          "problemCauseType": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInformationSearchRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sponsorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "statusCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "resolutionTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "problemCauseTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInformationSearchResponse": {
        "type": "object",
        "properties": {
          "paymentInformationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInformationReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentReprocessRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentSearchListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentSearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "willProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentUpdateStatusRequest": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PendingPaymentSearchRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PendingPaymentsRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "checkHoliday": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RecurringPaymentChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "$ref": "#/components/schemas/SearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecurringPaymentSearchListResponse": {
        "type": "object",
        "properties": {
          "recurringPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPaymentSearchReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecurringPaymentSearchReport": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "recurringPaymentId": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "initialAmount": {
            "type": "integer",
            "format": "int32"
          },
          "finalAmount": {
            "type": "integer",
            "format": "int32"
          },
          "lastProcessedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextProcessDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "initialDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processDay": {
            "type": "string",
            "nullable": true
          },
          "numberOfPayments": {
            "type": "integer",
            "format": "int32"
          },
          "paymentsProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "nullable": true
          },
          "sourceApplication": {
            "type": "string",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportRunRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationClearRequest": {
        "type": "object",
        "properties": {
          "clearUpToDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationListResponse": {
        "type": "object",
        "properties": {
          "savedNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SavedNotificationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "statusCodeDescription": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "memberEmail": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "sent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationSearchParameter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SavedNotificationSearchParameterType"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "value2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavedNotificationSearchParameterType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "SavedNotificationSearchRequest": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SavedNotificationSearchParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduledPaymentChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "$ref": "#/components/schemas/SearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "searchType": {
            "$ref": "#/components/schemas/SearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "ServiceResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "StatusCodeListResponse": {
        "type": "object",
        "properties": {
          "statusCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusCodeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusCodeResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "hostCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountAndRefund": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountAndReprocessRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFisPayeeIdAndRefundRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "exceptionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserPayeeChangeHistoryListResponse": {
        "type": "object",
        "properties": {
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeChangeHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeChangeHistoryReportRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "searchType": {
            "$ref": "#/components/schemas/SearchType"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeChangeHistoryResponse": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "payeeName": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeData": {
        "type": "object",
        "properties": {
          "payee": {
            "$ref": "#/components/schemas/Payee"
          },
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "attentionLine": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "favorite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserPayeeList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "nullable": true
          },
          "usersAccountAtPayee": {
            "type": "string",
            "nullable": true
          },
          "nameOnAccount": {
            "type": "string",
            "nullable": true
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "attentionLine": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "payeeType": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "favorite": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "updated": {
            "type": "boolean",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeListResponse": {
        "type": "object",
        "properties": {
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeListSearchListResponse": {
        "type": "object",
        "properties": {
          "userPayeeLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPayeeList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeUpdateAccountNumberRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPayeeUpdateFisPayeeIdRequest": {
        "type": "object",
        "properties": {
          "userPayeeListId": {
            "type": "string",
            "nullable": true
          },
          "fisPayeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}